{"version":3,"file":"index.js","sources":["../dist-src/version.js","../dist-src/get-authentication.js","../dist-src/auth.js","../dist-src/requires-basic-auth.js","../dist-src/hook.js","../dist-src/index.js"],"sourcesContent":["export const VERSION = \"2.0.1\";\n","// @ts-nocheck there is only place for one of us in this file. And it's not you, TS\nimport { createOAuthDeviceAuth } from \"@octokit/auth-oauth-device\";\nimport { exchangeWebFlowCode } from \"@octokit/oauth-methods\";\nexport async function getAuthentication(state) {\n    // handle code exchange form OAuth Web Flow\n    if (\"code\" in state.strategyOptions) {\n        const { authentication } = await exchangeWebFlowCode({\n            clientId: state.clientId,\n            clientSecret: state.clientSecret,\n            clientType: state.clientType,\n            ...state.strategyOptions,\n            request: state.request,\n        });\n        return {\n            type: \"token\",\n            tokenType: \"oauth\",\n            ...authentication,\n        };\n    }\n    // handle OAuth device flow\n    if (\"onVerification\" in state.strategyOptions) {\n        const deviceAuth = createOAuthDeviceAuth({\n            clientType: state.clientType,\n            clientId: state.clientId,\n            ...state.strategyOptions,\n            request: state.request,\n        });\n        const authentication = await deviceAuth({\n            type: \"oauth\",\n        });\n        return {\n            clientSecret: state.clientSecret,\n            ...authentication,\n        };\n    }\n    // use existing authentication\n    if (\"token\" in state.strategyOptions) {\n        return {\n            type: \"token\",\n            tokenType: \"oauth\",\n            clientId: state.clientId,\n            clientSecret: state.clientSecret,\n            clientType: state.clientType,\n            ...state.strategyOptions,\n        };\n    }\n    throw new Error(\"[@octokit/auth-oauth-user] Invalid strategy options\");\n}\n","import { getAuthentication } from \"./get-authentication\";\nimport { checkToken, deleteAuthorization, deleteToken, refreshToken, resetToken, } from \"@octokit/oauth-methods\";\nexport async function auth(state, options = {}) {\n    if (!state.authentication) {\n        // This is what TS makes us do ¯\\_(ツ)_/¯\n        state.authentication =\n            state.clientType === \"oauth-app\"\n                ? await getAuthentication(state)\n                : await getAuthentication(state);\n    }\n    if (state.authentication.invalid) {\n        throw new Error(\"[@octokit/auth-oauth-user] Token is invalid\");\n    }\n    const currentAuthentication = state.authentication;\n    // (auto) refresh for user-to-server tokens\n    if (\"expiresAt\" in currentAuthentication) {\n        if (options.type === \"refresh\" ||\n            new Date(currentAuthentication.expiresAt) < new Date()) {\n            const { authentication } = await refreshToken({\n                clientType: \"github-app\",\n                clientId: state.clientId,\n                clientSecret: state.clientSecret,\n                refreshToken: currentAuthentication.refreshToken,\n                request: state.request,\n            });\n            state.authentication = {\n                tokenType: \"oauth\",\n                type: \"token\",\n                ...authentication,\n            };\n        }\n    }\n    // throw error for invalid refresh call\n    if (options.type === \"refresh\") {\n        if (state.clientType === \"oauth-app\") {\n            throw new Error(\"[@octokit/auth-oauth-user] OAuth Apps do not support expiring tokens\");\n        }\n        if (!currentAuthentication.hasOwnProperty(\"expiresAt\")) {\n            throw new Error(\"[@octokit/auth-oauth-user] Refresh token missing\");\n        }\n    }\n    // check or reset token\n    if (options.type === \"check\" || options.type === \"reset\") {\n        const method = options.type === \"check\" ? checkToken : resetToken;\n        try {\n            const { authentication } = await method({\n                // @ts-expect-error making TS happy would require unnecessary code so no\n                clientType: state.clientType,\n                clientId: state.clientId,\n                clientSecret: state.clientSecret,\n                token: state.authentication.token,\n                request: state.request,\n            });\n            state.authentication = {\n                tokenType: \"oauth\",\n                type: \"token\",\n                // @ts-expect-error TBD\n                ...authentication,\n            };\n            return state.authentication;\n        }\n        catch (error) {\n            // istanbul ignore else\n            if (error.status === 404) {\n                error.message = \"[@octokit/auth-oauth-user] Token is invalid\";\n                // @ts-expect-error TBD\n                state.authentication.invalid = true;\n            }\n            throw error;\n        }\n    }\n    // invalidate\n    if (options.type === \"delete\" || options.type === \"deleteAuthorization\") {\n        const method = options.type === \"delete\" ? deleteToken : deleteAuthorization;\n        try {\n            await method({\n                // @ts-expect-error making TS happy would require unnecessary code so no\n                clientType: state.clientType,\n                clientId: state.clientId,\n                clientSecret: state.clientSecret,\n                token: state.authentication.token,\n                request: state.request,\n            });\n        }\n        catch (error) {\n            // istanbul ignore if\n            if (error.status !== 404)\n                throw error;\n        }\n        state.authentication.invalid = true;\n        return state.authentication;\n    }\n    return state.authentication;\n}\n","/**\n * The following endpoints require an OAuth App to authenticate using its client_id and client_secret.\n *\n * - [`POST /applications/{client_id}/token`](https://docs.github.com/en/rest/reference/apps#check-a-token) - Check a token\n * - [`PATCH /applications/{client_id}/token`](https://docs.github.com/en/rest/reference/apps#reset-a-token) - Reset a token\n * - [`POST /applications/{client_id}/token/scoped`](https://docs.github.com/en/rest/reference/apps#create-a-scoped-access-token) - Create a scoped access token\n * - [`DELETE /applications/{client_id}/token`](https://docs.github.com/en/rest/reference/apps#delete-an-app-token) - Delete an app token\n * - [`DELETE /applications/{client_id}/grant`](https://docs.github.com/en/rest/reference/apps#delete-an-app-authorization) - Delete an app authorization\n *\n * deprecated:\n *\n * - [`GET /applications/{client_id}/tokens/{access_token}`](https://docs.github.com/en/rest/reference/apps#check-an-authorization) - Check an authorization\n * - [`POST /applications/{client_id}/tokens/{access_token}`](https://docs.github.com/en/rest/reference/apps#reset-an-authorization) - Reset an authorization\n * - [`DELETE /applications/{client_id}/tokens/{access_token}`](https://docs.github.com/en/rest/reference/apps#revoke-an-authorization-for-an-application) - Revoke an authorization for an application\n * - [`DELETE /applications/{client_id}/grants/{access_token}`](https://docs.github.com/en/rest/reference/apps#revoke-a-grant-for-an-application) - Revoke a grant for an application\n */\nconst ROUTES_REQUIRING_BASIC_AUTH = /\\/applications\\/[^/]+\\/(token|grant)s?/;\nexport function requiresBasicAuth(url) {\n    return url && ROUTES_REQUIRING_BASIC_AUTH.test(url);\n}\n","import btoa from \"btoa-lite\";\nimport { auth } from \"./auth\";\nimport { requiresBasicAuth } from \"./requires-basic-auth\";\nexport async function hook(state, request, route, parameters = {}) {\n    const endpoint = request.endpoint.merge(route, parameters);\n    // Do not intercept OAuth Web/Device flow request\n    if (/\\/login\\/(oauth\\/access_token|device\\/code)$/.test(endpoint.url)) {\n        return request(endpoint);\n    }\n    if (requiresBasicAuth(endpoint.url)) {\n        const credentials = btoa(`${state.clientId}:${state.clientSecret}`);\n        endpoint.headers.authorization = `basic ${credentials}`;\n        return request(endpoint);\n    }\n    // TS makes us do this ¯\\_(ツ)_/¯\n    const { token } = state.clientType === \"oauth-app\"\n        ? await auth({ ...state, request })\n        : await auth({ ...state, request });\n    endpoint.headers.authorization = \"token \" + token;\n    return request(endpoint);\n}\n","import { getUserAgent } from \"universal-user-agent\";\nimport { request as octokitRequest } from \"@octokit/request\";\nimport { VERSION } from \"./version\";\nimport { auth } from \"./auth\";\nimport { hook } from \"./hook\";\nexport { requiresBasicAuth } from \"./requires-basic-auth\";\nexport function createOAuthUserAuth({ clientId, clientSecret, clientType = \"oauth-app\", request = octokitRequest.defaults({\n    headers: {\n        \"user-agent\": `octokit-auth-oauth-app.js/${VERSION} ${getUserAgent()}`,\n    },\n}), ...strategyOptions }) {\n    const state = Object.assign({\n        clientType,\n        clientId,\n        clientSecret,\n        strategyOptions,\n        request,\n    });\n    // @ts-expect-error not worth the extra code needed to appease TS\n    return Object.assign(auth.bind(null, state), {\n        // @ts-expect-error not worth the extra code needed to appease TS\n        hook: hook.bind(null, state),\n    });\n}\ncreateOAuthUserAuth.VERSION = VERSION;\n"],"names":["VERSION","getAuthentication","state","strategyOptions","authentication","exchangeWebFlowCode","clientId","clientSecret","clientType","request","type","tokenType","deviceAuth","createOAuthDeviceAuth","Error","auth","options","invalid","currentAuthentication","Date","expiresAt","refreshToken","hasOwnProperty","method","checkToken","resetToken","token","error","status","message","deleteToken","deleteAuthorization","ROUTES_REQUIRING_BASIC_AUTH","requiresBasicAuth","url","test","hook","route","parameters","endpoint","merge","credentials","btoa","headers","authorization","createOAuthUserAuth","octokitRequest","defaults","getUserAgent","Object","assign","bind"],"mappings":";;;;;;;;;;;;AAAO,MAAMA,OAAO,GAAG,mBAAhB;;ACAP;AACA,AAEO,eAAeC,iBAAf,CAAiCC,KAAjC,EAAwC;AAC3C;AACA,MAAI,UAAUA,KAAK,CAACC,eAApB,EAAqC;AACjC,UAAM;AAAEC,MAAAA;AAAF,QAAqB,MAAMC,gCAAmB,CAAC;AACjDC,MAAAA,QAAQ,EAAEJ,KAAK,CAACI,QADiC;AAEjDC,MAAAA,YAAY,EAAEL,KAAK,CAACK,YAF6B;AAGjDC,MAAAA,UAAU,EAAEN,KAAK,CAACM,UAH+B;AAIjD,SAAGN,KAAK,CAACC,eAJwC;AAKjDM,MAAAA,OAAO,EAAEP,KAAK,CAACO;AALkC,KAAD,CAApD;AAOA,WAAO;AACHC,MAAAA,IAAI,EAAE,OADH;AAEHC,MAAAA,SAAS,EAAE,OAFR;AAGH,SAAGP;AAHA,KAAP;AAKH,GAf0C;;;AAiB3C,MAAI,oBAAoBF,KAAK,CAACC,eAA9B,EAA+C;AAC3C,UAAMS,UAAU,GAAGC,qCAAqB,CAAC;AACrCL,MAAAA,UAAU,EAAEN,KAAK,CAACM,UADmB;AAErCF,MAAAA,QAAQ,EAAEJ,KAAK,CAACI,QAFqB;AAGrC,SAAGJ,KAAK,CAACC,eAH4B;AAIrCM,MAAAA,OAAO,EAAEP,KAAK,CAACO;AAJsB,KAAD,CAAxC;AAMA,UAAML,cAAc,GAAG,MAAMQ,UAAU,CAAC;AACpCF,MAAAA,IAAI,EAAE;AAD8B,KAAD,CAAvC;AAGA,WAAO;AACHH,MAAAA,YAAY,EAAEL,KAAK,CAACK,YADjB;AAEH,SAAGH;AAFA,KAAP;AAIH,GA/B0C;;;AAiC3C,MAAI,WAAWF,KAAK,CAACC,eAArB,EAAsC;AAClC,WAAO;AACHO,MAAAA,IAAI,EAAE,OADH;AAEHC,MAAAA,SAAS,EAAE,OAFR;AAGHL,MAAAA,QAAQ,EAAEJ,KAAK,CAACI,QAHb;AAIHC,MAAAA,YAAY,EAAEL,KAAK,CAACK,YAJjB;AAKHC,MAAAA,UAAU,EAAEN,KAAK,CAACM,UALf;AAMH,SAAGN,KAAK,CAACC;AANN,KAAP;AAQH;;AACD,QAAM,IAAIW,KAAJ,CAAU,qDAAV,CAAN;AACH;;AC7CM,eAAeC,IAAf,CAAoBb,KAApB,EAA2Bc,OAAO,GAAG,EAArC,EAAyC;AAC5C,MAAI,CAACd,KAAK,CAACE,cAAX,EAA2B;AACvB;AACAF,IAAAA,KAAK,CAACE,cAAN,GACIF,KAAK,CAACM,UAAN,KAAqB,WAArB,GACM,MAAMP,iBAAiB,CAACC,KAAD,CAD7B,GAEM,MAAMD,iBAAiB,CAACC,KAAD,CAHjC;AAIH;;AACD,MAAIA,KAAK,CAACE,cAAN,CAAqBa,OAAzB,EAAkC;AAC9B,UAAM,IAAIH,KAAJ,CAAU,6CAAV,CAAN;AACH;;AACD,QAAMI,qBAAqB,GAAGhB,KAAK,CAACE,cAApC,CAX4C;;AAa5C,MAAI,eAAec,qBAAnB,EAA0C;AACtC,QAAIF,OAAO,CAACN,IAAR,KAAiB,SAAjB,IACA,IAAIS,IAAJ,CAASD,qBAAqB,CAACE,SAA/B,IAA4C,IAAID,IAAJ,EADhD,EAC4D;AACxD,YAAM;AAAEf,QAAAA;AAAF,UAAqB,MAAMiB,yBAAY,CAAC;AAC1Cb,QAAAA,UAAU,EAAE,YAD8B;AAE1CF,QAAAA,QAAQ,EAAEJ,KAAK,CAACI,QAF0B;AAG1CC,QAAAA,YAAY,EAAEL,KAAK,CAACK,YAHsB;AAI1Cc,QAAAA,YAAY,EAAEH,qBAAqB,CAACG,YAJM;AAK1CZ,QAAAA,OAAO,EAAEP,KAAK,CAACO;AAL2B,OAAD,CAA7C;AAOAP,MAAAA,KAAK,CAACE,cAAN,GAAuB;AACnBO,QAAAA,SAAS,EAAE,OADQ;AAEnBD,QAAAA,IAAI,EAAE,OAFa;AAGnB,WAAGN;AAHgB,OAAvB;AAKH;AACJ,GA7B2C;;;AA+B5C,MAAIY,OAAO,CAACN,IAAR,KAAiB,SAArB,EAAgC;AAC5B,QAAIR,KAAK,CAACM,UAAN,KAAqB,WAAzB,EAAsC;AAClC,YAAM,IAAIM,KAAJ,CAAU,sEAAV,CAAN;AACH;;AACD,QAAI,CAACI,qBAAqB,CAACI,cAAtB,CAAqC,WAArC,CAAL,EAAwD;AACpD,YAAM,IAAIR,KAAJ,CAAU,kDAAV,CAAN;AACH;AACJ,GAtC2C;;;AAwC5C,MAAIE,OAAO,CAACN,IAAR,KAAiB,OAAjB,IAA4BM,OAAO,CAACN,IAAR,KAAiB,OAAjD,EAA0D;AACtD,UAAMa,MAAM,GAAGP,OAAO,CAACN,IAAR,KAAiB,OAAjB,GAA2Bc,uBAA3B,GAAwCC,uBAAvD;;AACA,QAAI;AACA,YAAM;AAAErB,QAAAA;AAAF,UAAqB,MAAMmB,MAAM,CAAC;AACpC;AACAf,QAAAA,UAAU,EAAEN,KAAK,CAACM,UAFkB;AAGpCF,QAAAA,QAAQ,EAAEJ,KAAK,CAACI,QAHoB;AAIpCC,QAAAA,YAAY,EAAEL,KAAK,CAACK,YAJgB;AAKpCmB,QAAAA,KAAK,EAAExB,KAAK,CAACE,cAAN,CAAqBsB,KALQ;AAMpCjB,QAAAA,OAAO,EAAEP,KAAK,CAACO;AANqB,OAAD,CAAvC;AAQAP,MAAAA,KAAK,CAACE,cAAN,GAAuB;AACnBO,QAAAA,SAAS,EAAE,OADQ;AAEnBD,QAAAA,IAAI,EAAE,OAFa;AAGnB;AACA,WAAGN;AAJgB,OAAvB;AAMA,aAAOF,KAAK,CAACE,cAAb;AACH,KAhBD,CAiBA,OAAOuB,KAAP,EAAc;AACV;AACA,UAAIA,KAAK,CAACC,MAAN,KAAiB,GAArB,EAA0B;AACtBD,QAAAA,KAAK,CAACE,OAAN,GAAgB,6CAAhB,CADsB;;AAGtB3B,QAAAA,KAAK,CAACE,cAAN,CAAqBa,OAArB,GAA+B,IAA/B;AACH;;AACD,YAAMU,KAAN;AACH;AACJ,GApE2C;;;AAsE5C,MAAIX,OAAO,CAACN,IAAR,KAAiB,QAAjB,IAA6BM,OAAO,CAACN,IAAR,KAAiB,qBAAlD,EAAyE;AACrE,UAAMa,MAAM,GAAGP,OAAO,CAACN,IAAR,KAAiB,QAAjB,GAA4BoB,wBAA5B,GAA0CC,gCAAzD;;AACA,QAAI;AACA,YAAMR,MAAM,CAAC;AACT;AACAf,QAAAA,UAAU,EAAEN,KAAK,CAACM,UAFT;AAGTF,QAAAA,QAAQ,EAAEJ,KAAK,CAACI,QAHP;AAITC,QAAAA,YAAY,EAAEL,KAAK,CAACK,YAJX;AAKTmB,QAAAA,KAAK,EAAExB,KAAK,CAACE,cAAN,CAAqBsB,KALnB;AAMTjB,QAAAA,OAAO,EAAEP,KAAK,CAACO;AANN,OAAD,CAAZ;AAQH,KATD,CAUA,OAAOkB,KAAP,EAAc;AACV;AACA,UAAIA,KAAK,CAACC,MAAN,KAAiB,GAArB,EACI,MAAMD,KAAN;AACP;;AACDzB,IAAAA,KAAK,CAACE,cAAN,CAAqBa,OAArB,GAA+B,IAA/B;AACA,WAAOf,KAAK,CAACE,cAAb;AACH;;AACD,SAAOF,KAAK,CAACE,cAAb;AACH;;AC7FD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM4B,2BAA2B,GAAG,wCAApC;AACA,AAAO,SAASC,iBAAT,CAA2BC,GAA3B,EAAgC;AACnC,SAAOA,GAAG,IAAIF,2BAA2B,CAACG,IAA5B,CAAiCD,GAAjC,CAAd;AACH;;AChBM,eAAeE,IAAf,CAAoBlC,KAApB,EAA2BO,OAA3B,EAAoC4B,KAApC,EAA2CC,UAAU,GAAG,EAAxD,EAA4D;AAC/D,QAAMC,QAAQ,GAAG9B,OAAO,CAAC8B,QAAR,CAAiBC,KAAjB,CAAuBH,KAAvB,EAA8BC,UAA9B,CAAjB,CAD+D;;AAG/D,MAAI,+CAA+CH,IAA/C,CAAoDI,QAAQ,CAACL,GAA7D,CAAJ,EAAuE;AACnE,WAAOzB,OAAO,CAAC8B,QAAD,CAAd;AACH;;AACD,MAAIN,iBAAiB,CAACM,QAAQ,CAACL,GAAV,CAArB,EAAqC;AACjC,UAAMO,WAAW,GAAGC,IAAI,CAAE,GAAExC,KAAK,CAACI,QAAS,IAAGJ,KAAK,CAACK,YAAa,EAAzC,CAAxB;AACAgC,IAAAA,QAAQ,CAACI,OAAT,CAAiBC,aAAjB,GAAkC,SAAQH,WAAY,EAAtD;AACA,WAAOhC,OAAO,CAAC8B,QAAD,CAAd;AACH,GAV8D;;;AAY/D,QAAM;AAAEb,IAAAA;AAAF,MAAYxB,KAAK,CAACM,UAAN,KAAqB,WAArB,GACZ,MAAMO,IAAI,CAAC,EAAE,GAAGb,KAAL;AAAYO,IAAAA;AAAZ,GAAD,CADE,GAEZ,MAAMM,IAAI,CAAC,EAAE,GAAGb,KAAL;AAAYO,IAAAA;AAAZ,GAAD,CAFhB;AAGA8B,EAAAA,QAAQ,CAACI,OAAT,CAAiBC,aAAjB,GAAiC,WAAWlB,KAA5C;AACA,SAAOjB,OAAO,CAAC8B,QAAD,CAAd;AACH;;ACdM,SAASM,mBAAT,CAA6B;AAAEvC,EAAAA,QAAF;AAAYC,EAAAA,YAAZ;AAA0BC,EAAAA,UAAU,GAAG,WAAvC;AAAoDC,WAAAA,SAAO,GAAGqC,eAAc,CAACC,QAAf,CAAwB;AACtHJ,IAAAA,OAAO,EAAE;AACL,oBAAe,6BAA4B3C,OAAQ,IAAGgD,+BAAY,EAAG;AADhE;AAD6G,GAAxB,CAA9D;AAIhC,KAAG7C;AAJ6B,CAA7B,EAImB;AACtB,QAAMD,KAAK,GAAG+C,MAAM,CAACC,MAAP,CAAc;AACxB1C,IAAAA,UADwB;AAExBF,IAAAA,QAFwB;AAGxBC,IAAAA,YAHwB;AAIxBJ,IAAAA,eAJwB;AAKxBM,aAAAA;AALwB,GAAd,CAAd,CADsB;;AAStB,SAAOwC,MAAM,CAACC,MAAP,CAAcnC,IAAI,CAACoC,IAAL,CAAU,IAAV,EAAgBjD,KAAhB,CAAd,EAAsC;AACzC;AACAkC,IAAAA,IAAI,EAAEA,IAAI,CAACe,IAAL,CAAU,IAAV,EAAgBjD,KAAhB;AAFmC,GAAtC,CAAP;AAIH;AACD2C,mBAAmB,CAAC7C,OAApB,GAA8BA,OAA9B;;;;;"}