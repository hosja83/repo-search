{"ast":null,"code":"async function auth(reason) {\n  return {\n    type: \"unauthenticated\",\n    reason\n  };\n}\n\nfunction isRateLimitError(error) {\n  if (error.status !== 403) {\n    return false;\n  }\n  /* istanbul ignore if */\n\n\n  if (!error.response) {\n    return false;\n  }\n\n  return error.response.headers[\"x-ratelimit-remaining\"] === \"0\";\n}\n\nconst REGEX_ABUSE_LIMIT_MESSAGE = /\\babuse\\b/i;\n\nfunction isAbuseLimitError(error) {\n  if (error.status !== 403) {\n    return false;\n  }\n\n  return REGEX_ABUSE_LIMIT_MESSAGE.test(error.message);\n}\n\nasync function hook(reason, request, route, parameters) {\n  const endpoint = request.endpoint.merge(route, parameters);\n  return request(endpoint).catch(error => {\n    if (error.status === 404) {\n      error.message = `Not found. May be due to lack of authentication. Reason: ${reason}`;\n      throw error;\n    }\n\n    if (isRateLimitError(error)) {\n      error.message = `API rate limit exceeded. This maybe caused by the lack of authentication. Reason: ${reason}`;\n      throw error;\n    }\n\n    if (isAbuseLimitError(error)) {\n      error.message = `You have triggered an abuse detection mechanism. This maybe caused by the lack of authentication. Reason: ${reason}`;\n      throw error;\n    }\n\n    if (error.status === 401) {\n      error.message = `Unauthorized. \"${endpoint.method} ${endpoint.url}\" failed most likely due to lack of authentication. Reason: ${reason}`;\n      throw error;\n    }\n\n    if (error.status >= 400 && error.status < 500) {\n      error.message = error.message.replace(/\\.?$/, `. May be caused by lack of authentication (${reason}).`);\n    }\n\n    throw error;\n  });\n}\n\nconst createUnauthenticatedAuth = function createUnauthenticatedAuth(options) {\n  if (!options || !options.reason) {\n    throw new Error(\"[@octokit/auth-unauthenticated] No reason passed to createUnauthenticatedAuth\");\n  }\n\n  return Object.assign(auth.bind(null, options.reason), {\n    hook: hook.bind(null, options.reason)\n  });\n};\n\nexport { createUnauthenticatedAuth };","map":{"version":3,"mappings":"AAAO,eAAeA,IAAf,CAAoBC,MAApB,EAA4B;EAC/B,OAAO;IACHC,IAAI,EAAE,iBADH;IAEHD;EAFG,CAAP;AAIJ;;ACLO,SAASE,gBAAT,CAA0BC,KAA1B,EAAiC;EACpC,IAAIA,KAAK,CAACC,MAAN,KAAiB,GAArB,EAA0B;IACtB,OAAO,KAAP;EACH;EACL;;;EACI,IAAI,CAACD,KAAK,CAACE,QAAX,EAAqB;IACjB,OAAO,KAAP;EACH;;EACD,OAAOF,KAAK,CAACE,QAAN,CAAeC,OAAf,CAAuB,uBAAvB,MAAoD,GAA3D;AACH;;ACTD,MAAMC,yBAAyB,GAAG,YAAlC;;AACA,SAAgBC,iBAAhB,CAAkCL,KAAlC,EAAyC;EACrC,IAAIA,KAAK,CAACC,MAAN,KAAiB,GAArB,EAA0B;IACtB,OAAO,KAAP;EACH;;EACD,OAAOG,yBAAyB,CAACE,IAA1B,CAA+BN,KAAK,CAACO,OAArC,CAAP;AACH;;ACJM,eAAeC,IAAf,CAAoBX,MAApB,EAA4BY,OAA5B,EAAqCC,KAArC,EAA4CC,UAA5C,EAAwD;EAC3D,MAAMC,QAAQ,GAAGH,OAAO,CAACG,QAAR,CAAiBC,KAAjB,CAAuBH,KAAvB,EAA8BC,UAA9B,CAAjB;EACA,OAAOF,OAAO,CAACG,QAAD,CAAP,CAAkBE,KAAlB,CAAyBd,KAAD,IAAW;IACtC,IAAIA,KAAK,CAACC,MAAN,KAAiB,GAArB,EAA0B;MACtBD,KAAK,CAACO,OAAN,GAAiB,4DAA2DV,MAAO,EAAnF;MACA,MAAMG,KAAN;IACH;;IACD,IAAID,gBAAgB,CAACC,KAAD,CAApB,EAA6B;MACzBA,KAAK,CAACO,OAAN,GAAiB,qFAAoFV,MAAO,EAA5G;MACA,MAAMG,KAAN;IACH;;IACD,IAAIK,iBAAiB,CAACL,KAAD,CAArB,EAA8B;MAC1BA,KAAK,CAACO,OAAN,GAAiB,6GAA4GV,MAAO,EAApI;MACA,MAAMG,KAAN;IACH;;IACD,IAAIA,KAAK,CAACC,MAAN,KAAiB,GAArB,EAA0B;MACtBD,KAAK,CAACO,OAAN,GAAiB,kBAAiBK,QAAQ,CAACG,MAAO,IAAGH,QAAQ,CAACI,GAAI,+DAA8DnB,MAAO,EAAvI;MACA,MAAMG,KAAN;IACH;;IACD,IAAIA,KAAK,CAACC,MAAN,IAAgB,GAAhB,IAAuBD,KAAK,CAACC,MAAN,GAAe,GAA1C,EAA+C;MAC3CD,KAAK,CAACO,OAAN,GAAgBP,KAAK,CAACO,OAAN,CAAcU,OAAd,CAAsB,MAAtB,EAA+B,8CAA6CpB,MAAO,IAAnF,CAAhB;IACH;;IACD,MAAMG,KAAN;EACH,CArBM,CAAP;AAsBH;;ACxBW,MAACkB,yBAAyB,GAAG,SAASA,yBAAT,CAAmCC,OAAnC,EAA4C;EACjF,IAAI,CAACA,OAAD,IAAY,CAACA,OAAO,CAACtB,MAAzB,EAAiC;IAC7B,MAAM,IAAIuB,KAAJ,CAAU,+EAAV,CAAN;EACH;;EACD,OAAOC,MAAM,CAACC,MAAP,CAAc1B,IAAI,CAAC2B,IAAL,CAAU,IAAV,EAAgBJ,OAAO,CAACtB,MAAxB,CAAd,EAA+C;IAClDW,IAAI,EAAEA,IAAI,CAACe,IAAL,CAAU,IAAV,EAAgBJ,OAAO,CAACtB,MAAxB;EAD4C,CAA/C,CAAP;AAGH,CAPW","names":["auth","reason","type","isRateLimitError","error","status","response","headers","REGEX_ABUSE_LIMIT_MESSAGE","isAbuseLimitError","test","message","hook","request","route","parameters","endpoint","merge","catch","method","url","replace","createUnauthenticatedAuth","options","Error","Object","assign","bind"],"sources":["/home/hosainy/documents/oden-project/repos/sas-interview-assignment/node_modules/@octokit/auth-unauthenticated/dist-src/auth.js","/home/hosainy/documents/oden-project/repos/sas-interview-assignment/node_modules/@octokit/auth-unauthenticated/dist-src/is-rate-limit-error.js","/home/hosainy/documents/oden-project/repos/sas-interview-assignment/node_modules/@octokit/auth-unauthenticated/dist-src/is-abuse-limit-error.js","/home/hosainy/documents/oden-project/repos/sas-interview-assignment/node_modules/@octokit/auth-unauthenticated/dist-src/hook.js","/home/hosainy/documents/oden-project/repos/sas-interview-assignment/node_modules/@octokit/auth-unauthenticated/dist-src/index.js"],"sourcesContent":["export async function auth(reason) {\n    return {\n        type: \"unauthenticated\",\n        reason,\n    };\n}\n","export function isRateLimitError(error) {\n    if (error.status !== 403) {\n        return false;\n    }\n    /* istanbul ignore if */\n    if (!error.response) {\n        return false;\n    }\n    return error.response.headers[\"x-ratelimit-remaining\"] === \"0\";\n}\n","const REGEX_ABUSE_LIMIT_MESSAGE = /\\babuse\\b/i;\nexport function isAbuseLimitError(error) {\n    if (error.status !== 403) {\n        return false;\n    }\n    return REGEX_ABUSE_LIMIT_MESSAGE.test(error.message);\n}\n","import { isRateLimitError } from \"./is-rate-limit-error\";\nimport { isAbuseLimitError } from \"./is-abuse-limit-error\";\nexport async function hook(reason, request, route, parameters) {\n    const endpoint = request.endpoint.merge(route, parameters);\n    return request(endpoint).catch((error) => {\n        if (error.status === 404) {\n            error.message = `Not found. May be due to lack of authentication. Reason: ${reason}`;\n            throw error;\n        }\n        if (isRateLimitError(error)) {\n            error.message = `API rate limit exceeded. This maybe caused by the lack of authentication. Reason: ${reason}`;\n            throw error;\n        }\n        if (isAbuseLimitError(error)) {\n            error.message = `You have triggered an abuse detection mechanism. This maybe caused by the lack of authentication. Reason: ${reason}`;\n            throw error;\n        }\n        if (error.status === 401) {\n            error.message = `Unauthorized. \"${endpoint.method} ${endpoint.url}\" failed most likely due to lack of authentication. Reason: ${reason}`;\n            throw error;\n        }\n        if (error.status >= 400 && error.status < 500) {\n            error.message = error.message.replace(/\\.?$/, `. May be caused by lack of authentication (${reason}).`);\n        }\n        throw error;\n    });\n}\n","import { auth } from \"./auth\";\nimport { hook } from \"./hook\";\nexport const createUnauthenticatedAuth = function createUnauthenticatedAuth(options) {\n    if (!options || !options.reason) {\n        throw new Error(\"[@octokit/auth-unauthenticated] No reason passed to createUnauthenticatedAuth\");\n    }\n    return Object.assign(auth.bind(null, options.reason), {\n        hook: hook.bind(null, options.reason),\n    });\n};\n"]},"metadata":{},"sourceType":"module"}