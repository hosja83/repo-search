{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nfunction _interopDefault(ex) {\n  return ex && typeof ex === 'object' && 'default' in ex ? ex['default'] : ex;\n}\n\nvar oauthAuthorizationUrl = require('@octokit/oauth-authorization-url');\n\nvar request = require('@octokit/request');\n\nvar requestError = require('@octokit/request-error');\n\nvar btoa = _interopDefault(require('btoa-lite'));\n\nconst VERSION = \"1.2.6\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n\n    if (enumerableOnly) {\n      symbols = symbols.filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n      });\n    }\n\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nfunction requestToOAuthBaseUrl(request) {\n  const endpointDefaults = request.endpoint.DEFAULTS;\n  return /^https:\\/\\/(api\\.)?github\\.com$/.test(endpointDefaults.baseUrl) ? \"https://github.com\" : endpointDefaults.baseUrl.replace(\"/api/v3\", \"\");\n}\n\nasync function oauthRequest(request, route, parameters) {\n  const withOAuthParameters = _objectSpread2({\n    baseUrl: requestToOAuthBaseUrl(request),\n    headers: {\n      accept: \"application/json\"\n    }\n  }, parameters);\n\n  const response = await request(route, withOAuthParameters);\n\n  if (\"error\" in response.data) {\n    const error = new requestError.RequestError(`${response.data.error_description} (${response.data.error}, ${response.data.error_uri})`, 400, {\n      request: request.endpoint.merge(route, withOAuthParameters),\n      headers: response.headers\n    }); // @ts-ignore add custom response property until https://github.com/octokit/request-error.js/issues/169 is resolved\n\n    error.response = response;\n    throw error;\n  }\n\n  return response;\n}\n\nconst _excluded = [\"request\"];\n\nfunction getWebFlowAuthorizationUrl(_ref) {\n  let {\n    request: request$1 = request.request\n  } = _ref,\n      options = _objectWithoutProperties(_ref, _excluded);\n\n  const baseUrl = requestToOAuthBaseUrl(request$1); // @ts-expect-error TypeScript wants `clientType` to be set explicitly ¯\\_(ツ)_/¯\n\n  return oauthAuthorizationUrl.oauthAuthorizationUrl(_objectSpread2(_objectSpread2({}, options), {}, {\n    baseUrl\n  }));\n}\n\nasync function exchangeWebFlowCode(options) {\n  const request$1 = options.request ||\n  /* istanbul ignore next: we always pass a custom request in tests */\n  request.request;\n  const response = await oauthRequest(request$1, \"POST /login/oauth/access_token\", {\n    client_id: options.clientId,\n    client_secret: options.clientSecret,\n    code: options.code,\n    redirect_uri: options.redirectUrl\n  });\n  const authentication = {\n    clientType: options.clientType,\n    clientId: options.clientId,\n    clientSecret: options.clientSecret,\n    token: response.data.access_token,\n    scopes: response.data.scope.split(/\\s+/).filter(Boolean)\n  };\n\n  if (options.clientType === \"github-app\") {\n    if (\"refresh_token\" in response.data) {\n      const apiTimeInMs = new Date(response.headers.date).getTime();\n      authentication.refreshToken = response.data.refresh_token, authentication.expiresAt = toTimestamp(apiTimeInMs, response.data.expires_in), authentication.refreshTokenExpiresAt = toTimestamp(apiTimeInMs, response.data.refresh_token_expires_in);\n    }\n\n    delete authentication.scopes;\n  }\n\n  return _objectSpread2(_objectSpread2({}, response), {}, {\n    authentication\n  });\n}\n\nfunction toTimestamp(apiTimeInMs, expirationInSeconds) {\n  return new Date(apiTimeInMs + expirationInSeconds * 1000).toISOString();\n}\n\nasync function createDeviceCode(options) {\n  const request$1 = options.request ||\n  /* istanbul ignore next: we always pass a custom request in tests */\n  request.request;\n  const parameters = {\n    client_id: options.clientId\n  };\n\n  if (\"scopes\" in options && Array.isArray(options.scopes)) {\n    parameters.scope = options.scopes.join(\" \");\n  }\n\n  return oauthRequest(request$1, \"POST /login/device/code\", parameters);\n}\n\nasync function exchangeDeviceCode(options) {\n  const request$1 = options.request ||\n  /* istanbul ignore next: we always pass a custom request in tests */\n  request.request;\n  const response = await oauthRequest(request$1, \"POST /login/oauth/access_token\", {\n    client_id: options.clientId,\n    device_code: options.code,\n    grant_type: \"urn:ietf:params:oauth:grant-type:device_code\"\n  });\n  const authentication = {\n    clientType: options.clientType,\n    clientId: options.clientId,\n    token: response.data.access_token,\n    scopes: response.data.scope.split(/\\s+/).filter(Boolean)\n  };\n\n  if (\"clientSecret\" in options) {\n    authentication.clientSecret = options.clientSecret;\n  }\n\n  if (options.clientType === \"github-app\") {\n    if (\"refresh_token\" in response.data) {\n      const apiTimeInMs = new Date(response.headers.date).getTime();\n      authentication.refreshToken = response.data.refresh_token, authentication.expiresAt = toTimestamp$1(apiTimeInMs, response.data.expires_in), authentication.refreshTokenExpiresAt = toTimestamp$1(apiTimeInMs, response.data.refresh_token_expires_in);\n    }\n\n    delete authentication.scopes;\n  }\n\n  return _objectSpread2(_objectSpread2({}, response), {}, {\n    authentication\n  });\n}\n\nfunction toTimestamp$1(apiTimeInMs, expirationInSeconds) {\n  return new Date(apiTimeInMs + expirationInSeconds * 1000).toISOString();\n}\n\nasync function checkToken(options) {\n  const request$1 = options.request ||\n  /* istanbul ignore next: we always pass a custom request in tests */\n  request.request;\n  const response = await request$1(\"POST /applications/{client_id}/token\", {\n    headers: {\n      authorization: `basic ${btoa(`${options.clientId}:${options.clientSecret}`)}`\n    },\n    client_id: options.clientId,\n    access_token: options.token\n  });\n  const authentication = {\n    clientType: options.clientType,\n    clientId: options.clientId,\n    clientSecret: options.clientSecret,\n    token: options.token,\n    scopes: response.data.scopes\n  };\n  if (response.data.expires_at) authentication.expiresAt = response.data.expires_at;\n\n  if (options.clientType === \"github-app\") {\n    delete authentication.scopes;\n  }\n\n  return _objectSpread2(_objectSpread2({}, response), {}, {\n    authentication\n  });\n}\n\nasync function refreshToken(options) {\n  const request$1 = options.request ||\n  /* istanbul ignore next: we always pass a custom request in tests */\n  request.request;\n  const response = await oauthRequest(request$1, \"POST /login/oauth/access_token\", {\n    client_id: options.clientId,\n    client_secret: options.clientSecret,\n    grant_type: \"refresh_token\",\n    refresh_token: options.refreshToken\n  });\n  const apiTimeInMs = new Date(response.headers.date).getTime();\n  const authentication = {\n    clientType: \"github-app\",\n    clientId: options.clientId,\n    clientSecret: options.clientSecret,\n    token: response.data.access_token,\n    refreshToken: response.data.refresh_token,\n    expiresAt: toTimestamp$2(apiTimeInMs, response.data.expires_in),\n    refreshTokenExpiresAt: toTimestamp$2(apiTimeInMs, response.data.refresh_token_expires_in)\n  };\n  return _objectSpread2(_objectSpread2({}, response), {}, {\n    authentication\n  });\n}\n\nfunction toTimestamp$2(apiTimeInMs, expirationInSeconds) {\n  return new Date(apiTimeInMs + expirationInSeconds * 1000).toISOString();\n}\n\nconst _excluded$1 = [\"request\", \"clientType\", \"clientId\", \"clientSecret\", \"token\"];\n\nasync function scopeToken(options) {\n  const {\n    request: request$1,\n    clientType,\n    clientId,\n    clientSecret,\n    token\n  } = options,\n        requestOptions = _objectWithoutProperties(options, _excluded$1);\n\n  const response = await (request$1 ||\n  /* istanbul ignore next: we always pass a custom request in tests */\n  request.request)(\"POST /applications/{client_id}/token/scoped\", _objectSpread2({\n    headers: {\n      authorization: `basic ${btoa(`${clientId}:${clientSecret}`)}`\n    },\n    client_id: clientId,\n    access_token: token\n  }, requestOptions));\n  const authentication = Object.assign({\n    clientType,\n    clientId,\n    clientSecret,\n    token: response.data.token\n  }, response.data.expires_at ? {\n    expiresAt: response.data.expires_at\n  } : {});\n  return _objectSpread2(_objectSpread2({}, response), {}, {\n    authentication\n  });\n}\n\nasync function resetToken(options) {\n  const request$1 = options.request ||\n  /* istanbul ignore next: we always pass a custom request in tests */\n  request.request;\n  const auth = btoa(`${options.clientId}:${options.clientSecret}`);\n  const response = await request$1(\"PATCH /applications/{client_id}/token\", {\n    headers: {\n      authorization: `basic ${auth}`\n    },\n    client_id: options.clientId,\n    access_token: options.token\n  });\n  const authentication = {\n    clientType: options.clientType,\n    clientId: options.clientId,\n    clientSecret: options.clientSecret,\n    token: response.data.token,\n    scopes: response.data.scopes\n  };\n  if (response.data.expires_at) authentication.expiresAt = response.data.expires_at;\n\n  if (options.clientType === \"github-app\") {\n    delete authentication.scopes;\n  }\n\n  return _objectSpread2(_objectSpread2({}, response), {}, {\n    authentication\n  });\n}\n\nasync function deleteToken(options) {\n  const request$1 = options.request ||\n  /* istanbul ignore next: we always pass a custom request in tests */\n  request.request;\n  const auth = btoa(`${options.clientId}:${options.clientSecret}`);\n  return request$1(\"DELETE /applications/{client_id}/token\", {\n    headers: {\n      authorization: `basic ${auth}`\n    },\n    client_id: options.clientId,\n    access_token: options.token\n  });\n}\n\nasync function deleteAuthorization(options) {\n  const request$1 = options.request ||\n  /* istanbul ignore next: we always pass a custom request in tests */\n  request.request;\n  const auth = btoa(`${options.clientId}:${options.clientSecret}`);\n  return request$1(\"DELETE /applications/{client_id}/grant\", {\n    headers: {\n      authorization: `basic ${auth}`\n    },\n    client_id: options.clientId,\n    access_token: options.token\n  });\n}\n\nexports.VERSION = VERSION;\nexports.checkToken = checkToken;\nexports.createDeviceCode = createDeviceCode;\nexports.deleteAuthorization = deleteAuthorization;\nexports.deleteToken = deleteToken;\nexports.exchangeDeviceCode = exchangeDeviceCode;\nexports.exchangeWebFlowCode = exchangeWebFlowCode;\nexports.getWebFlowAuthorizationUrl = getWebFlowAuthorizationUrl;\nexports.refreshToken = refreshToken;\nexports.resetToken = resetToken;\nexports.scopeToken = scopeToken;","map":{"version":3,"mappings":"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","names":["VERSION","requestToOAuthBaseUrl","request","endpointDefaults","endpoint","DEFAULTS","test","baseUrl","replace","oauthRequest","route","parameters","withOAuthParameters","headers","accept","response","data","error","RequestError","error_description","error_uri","merge","getWebFlowAuthorizationUrl","_ref","defaultRequest","options","oauthAuthorizationUrl","_objectSpread2","exchangeWebFlowCode","client_id","clientId","client_secret","clientSecret","code","redirect_uri","redirectUrl","authentication","clientType","token","access_token","scopes","scope","split","filter","Boolean","apiTimeInMs","Date","date","getTime","refreshToken","refresh_token","expiresAt","toTimestamp","expires_in","refreshTokenExpiresAt","refresh_token_expires_in","expirationInSeconds","toISOString","createDeviceCode","Array","isArray","join","exchangeDeviceCode","device_code","grant_type","checkToken","authorization","btoa","expires_at","scopeToken","requestOptions","Object","assign","resetToken","auth","deleteToken","deleteAuthorization"],"sources":["/home/hosainy/documents/oden-project/repos/sas-interview-assignment/node_modules/@octokit/auth-oauth-user/node_modules/@octokit/oauth-methods/dist-src/version.js","/home/hosainy/documents/oden-project/repos/sas-interview-assignment/node_modules/@octokit/auth-oauth-user/node_modules/@octokit/oauth-methods/dist-src/utils.js","/home/hosainy/documents/oden-project/repos/sas-interview-assignment/node_modules/@octokit/auth-oauth-user/node_modules/@octokit/oauth-methods/dist-src/get-web-flow-authorization-url.js","/home/hosainy/documents/oden-project/repos/sas-interview-assignment/node_modules/@octokit/auth-oauth-user/node_modules/@octokit/oauth-methods/dist-src/exchange-web-flow-code.js","/home/hosainy/documents/oden-project/repos/sas-interview-assignment/node_modules/@octokit/auth-oauth-user/node_modules/@octokit/oauth-methods/dist-src/create-device-code.js","/home/hosainy/documents/oden-project/repos/sas-interview-assignment/node_modules/@octokit/auth-oauth-user/node_modules/@octokit/oauth-methods/dist-src/exchange-device-code.js","/home/hosainy/documents/oden-project/repos/sas-interview-assignment/node_modules/@octokit/auth-oauth-user/node_modules/@octokit/oauth-methods/dist-src/check-token.js","/home/hosainy/documents/oden-project/repos/sas-interview-assignment/node_modules/@octokit/auth-oauth-user/node_modules/@octokit/oauth-methods/dist-src/refresh-token.js","/home/hosainy/documents/oden-project/repos/sas-interview-assignment/node_modules/@octokit/auth-oauth-user/node_modules/@octokit/oauth-methods/dist-src/scope-token.js","/home/hosainy/documents/oden-project/repos/sas-interview-assignment/node_modules/@octokit/auth-oauth-user/node_modules/@octokit/oauth-methods/dist-src/reset-token.js","/home/hosainy/documents/oden-project/repos/sas-interview-assignment/node_modules/@octokit/auth-oauth-user/node_modules/@octokit/oauth-methods/dist-src/delete-token.js","/home/hosainy/documents/oden-project/repos/sas-interview-assignment/node_modules/@octokit/auth-oauth-user/node_modules/@octokit/oauth-methods/dist-src/delete-authorization.js"],"sourcesContent":["export const VERSION = \"1.2.6\";\n","import { RequestError } from \"@octokit/request-error\";\nexport function requestToOAuthBaseUrl(request) {\n    const endpointDefaults = request.endpoint.DEFAULTS;\n    return /^https:\\/\\/(api\\.)?github\\.com$/.test(endpointDefaults.baseUrl)\n        ? \"https://github.com\"\n        : endpointDefaults.baseUrl.replace(\"/api/v3\", \"\");\n}\nexport async function oauthRequest(request, route, parameters) {\n    const withOAuthParameters = {\n        baseUrl: requestToOAuthBaseUrl(request),\n        headers: {\n            accept: \"application/json\",\n        },\n        ...parameters,\n    };\n    const response = await request(route, withOAuthParameters);\n    if (\"error\" in response.data) {\n        const error = new RequestError(`${response.data.error_description} (${response.data.error}, ${response.data.error_uri})`, 400, {\n            request: request.endpoint.merge(route, withOAuthParameters),\n            headers: response.headers,\n        });\n        // @ts-ignore add custom response property until https://github.com/octokit/request-error.js/issues/169 is resolved\n        error.response = response;\n        throw error;\n    }\n    return response;\n}\n","import { oauthAuthorizationUrl, } from \"@octokit/oauth-authorization-url\";\nimport { request as defaultRequest } from \"@octokit/request\";\nimport { requestToOAuthBaseUrl } from \"./utils\";\nexport function getWebFlowAuthorizationUrl({ request = defaultRequest, ...options }) {\n    const baseUrl = requestToOAuthBaseUrl(request);\n    // @ts-expect-error TypeScript wants `clientType` to be set explicitly ¯\\_(ツ)_/¯\n    return oauthAuthorizationUrl({\n        ...options,\n        baseUrl,\n    });\n}\n","import { request as defaultRequest } from \"@octokit/request\";\nimport { oauthRequest } from \"./utils\";\nexport async function exchangeWebFlowCode(options) {\n    const request = options.request ||\n        /* istanbul ignore next: we always pass a custom request in tests */\n        defaultRequest;\n    const response = await oauthRequest(request, \"POST /login/oauth/access_token\", {\n        client_id: options.clientId,\n        client_secret: options.clientSecret,\n        code: options.code,\n        redirect_uri: options.redirectUrl,\n    });\n    const authentication = {\n        clientType: options.clientType,\n        clientId: options.clientId,\n        clientSecret: options.clientSecret,\n        token: response.data.access_token,\n        scopes: response.data.scope.split(/\\s+/).filter(Boolean),\n    };\n    if (options.clientType === \"github-app\") {\n        if (\"refresh_token\" in response.data) {\n            const apiTimeInMs = new Date(response.headers.date).getTime();\n            (authentication.refreshToken = response.data.refresh_token),\n                (authentication.expiresAt = toTimestamp(apiTimeInMs, response.data.expires_in)),\n                (authentication.refreshTokenExpiresAt = toTimestamp(apiTimeInMs, response.data.refresh_token_expires_in));\n        }\n        delete authentication.scopes;\n    }\n    return { ...response, authentication };\n}\nfunction toTimestamp(apiTimeInMs, expirationInSeconds) {\n    return new Date(apiTimeInMs + expirationInSeconds * 1000).toISOString();\n}\n","import { request as defaultRequest } from \"@octokit/request\";\nimport { oauthRequest } from \"./utils\";\nexport async function createDeviceCode(options) {\n    const request = options.request ||\n        /* istanbul ignore next: we always pass a custom request in tests */\n        defaultRequest;\n    const parameters = {\n        client_id: options.clientId,\n    };\n    if (\"scopes\" in options && Array.isArray(options.scopes)) {\n        parameters.scope = options.scopes.join(\" \");\n    }\n    return oauthRequest(request, \"POST /login/device/code\", parameters);\n}\n","import { request as defaultRequest } from \"@octokit/request\";\nimport { oauthRequest } from \"./utils\";\nexport async function exchangeDeviceCode(options) {\n    const request = options.request ||\n        /* istanbul ignore next: we always pass a custom request in tests */\n        defaultRequest;\n    const response = await oauthRequest(request, \"POST /login/oauth/access_token\", {\n        client_id: options.clientId,\n        device_code: options.code,\n        grant_type: \"urn:ietf:params:oauth:grant-type:device_code\",\n    });\n    const authentication = {\n        clientType: options.clientType,\n        clientId: options.clientId,\n        token: response.data.access_token,\n        scopes: response.data.scope.split(/\\s+/).filter(Boolean),\n    };\n    if (\"clientSecret\" in options) {\n        authentication.clientSecret = options.clientSecret;\n    }\n    if (options.clientType === \"github-app\") {\n        if (\"refresh_token\" in response.data) {\n            const apiTimeInMs = new Date(response.headers.date).getTime();\n            (authentication.refreshToken = response.data.refresh_token),\n                (authentication.expiresAt = toTimestamp(apiTimeInMs, response.data.expires_in)),\n                (authentication.refreshTokenExpiresAt = toTimestamp(apiTimeInMs, response.data.refresh_token_expires_in));\n        }\n        delete authentication.scopes;\n    }\n    return { ...response, authentication };\n}\nfunction toTimestamp(apiTimeInMs, expirationInSeconds) {\n    return new Date(apiTimeInMs + expirationInSeconds * 1000).toISOString();\n}\n","import { request as defaultRequest } from \"@octokit/request\";\nimport btoa from \"btoa-lite\";\nexport async function checkToken(options) {\n    const request = options.request ||\n        /* istanbul ignore next: we always pass a custom request in tests */\n        defaultRequest;\n    const response = await request(\"POST /applications/{client_id}/token\", {\n        headers: {\n            authorization: `basic ${btoa(`${options.clientId}:${options.clientSecret}`)}`,\n        },\n        client_id: options.clientId,\n        access_token: options.token,\n    });\n    const authentication = {\n        clientType: options.clientType,\n        clientId: options.clientId,\n        clientSecret: options.clientSecret,\n        token: options.token,\n        scopes: response.data.scopes,\n    };\n    if (response.data.expires_at)\n        authentication.expiresAt = response.data.expires_at;\n    if (options.clientType === \"github-app\") {\n        delete authentication.scopes;\n    }\n    return { ...response, authentication };\n}\n","import { request as defaultRequest } from \"@octokit/request\";\nimport { oauthRequest } from \"./utils\";\nexport async function refreshToken(options) {\n    const request = options.request ||\n        /* istanbul ignore next: we always pass a custom request in tests */\n        defaultRequest;\n    const response = await oauthRequest(request, \"POST /login/oauth/access_token\", {\n        client_id: options.clientId,\n        client_secret: options.clientSecret,\n        grant_type: \"refresh_token\",\n        refresh_token: options.refreshToken,\n    });\n    const apiTimeInMs = new Date(response.headers.date).getTime();\n    const authentication = {\n        clientType: \"github-app\",\n        clientId: options.clientId,\n        clientSecret: options.clientSecret,\n        token: response.data.access_token,\n        refreshToken: response.data.refresh_token,\n        expiresAt: toTimestamp(apiTimeInMs, response.data.expires_in),\n        refreshTokenExpiresAt: toTimestamp(apiTimeInMs, response.data.refresh_token_expires_in),\n    };\n    return { ...response, authentication };\n}\nfunction toTimestamp(apiTimeInMs, expirationInSeconds) {\n    return new Date(apiTimeInMs + expirationInSeconds * 1000).toISOString();\n}\n","import { request as defaultRequest } from \"@octokit/request\";\nimport btoa from \"btoa-lite\";\nexport async function scopeToken(options) {\n    const { request, clientType, clientId, clientSecret, token, ...requestOptions } = options;\n    const response = await (request ||\n        /* istanbul ignore next: we always pass a custom request in tests */ defaultRequest)(\"POST /applications/{client_id}/token/scoped\", {\n        headers: {\n            authorization: `basic ${btoa(`${clientId}:${clientSecret}`)}`,\n        },\n        client_id: clientId,\n        access_token: token,\n        ...requestOptions,\n    });\n    const authentication = Object.assign({\n        clientType,\n        clientId,\n        clientSecret,\n        token: response.data.token,\n    }, response.data.expires_at ? { expiresAt: response.data.expires_at } : {});\n    return { ...response, authentication };\n}\n","import { request as defaultRequest } from \"@octokit/request\";\nimport btoa from \"btoa-lite\";\nexport async function resetToken(options) {\n    const request = options.request ||\n        /* istanbul ignore next: we always pass a custom request in tests */\n        defaultRequest;\n    const auth = btoa(`${options.clientId}:${options.clientSecret}`);\n    const response = await request(\"PATCH /applications/{client_id}/token\", {\n        headers: {\n            authorization: `basic ${auth}`,\n        },\n        client_id: options.clientId,\n        access_token: options.token,\n    });\n    const authentication = {\n        clientType: options.clientType,\n        clientId: options.clientId,\n        clientSecret: options.clientSecret,\n        token: response.data.token,\n        scopes: response.data.scopes,\n    };\n    if (response.data.expires_at)\n        authentication.expiresAt = response.data.expires_at;\n    if (options.clientType === \"github-app\") {\n        delete authentication.scopes;\n    }\n    return { ...response, authentication };\n}\n","import { request as defaultRequest } from \"@octokit/request\";\nimport btoa from \"btoa-lite\";\nexport async function deleteToken(options) {\n    const request = options.request ||\n        /* istanbul ignore next: we always pass a custom request in tests */\n        defaultRequest;\n    const auth = btoa(`${options.clientId}:${options.clientSecret}`);\n    return request(\"DELETE /applications/{client_id}/token\", {\n        headers: {\n            authorization: `basic ${auth}`,\n        },\n        client_id: options.clientId,\n        access_token: options.token,\n    });\n}\n","import { request as defaultRequest } from \"@octokit/request\";\nimport btoa from \"btoa-lite\";\nexport async function deleteAuthorization(options) {\n    const request = options.request ||\n        /* istanbul ignore next: we always pass a custom request in tests */\n        defaultRequest;\n    const auth = btoa(`${options.clientId}:${options.clientSecret}`);\n    return request(\"DELETE /applications/{client_id}/grant\", {\n        headers: {\n            authorization: `basic ${auth}`,\n        },\n        client_id: options.clientId,\n        access_token: options.token,\n    });\n}\n"]},"metadata":{},"sourceType":"script"}