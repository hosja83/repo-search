{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nfunction _interopDefault(ex) {\n  return ex && typeof ex === 'object' && 'default' in ex ? ex['default'] : ex;\n}\n\nvar OAuthAppAuth = require('@octokit/auth-oauth-app');\n\nvar core = require('@octokit/core');\n\nvar universalUserAgent = require('universal-user-agent');\n\nvar authOauthUser = require('@octokit/auth-oauth-user');\n\nvar OAuthMethods = require('@octokit/oauth-methods');\n\nvar authUnauthenticated = require('@octokit/auth-unauthenticated');\n\nvar fromEntries = _interopDefault(require('fromentries'));\n\nconst VERSION = \"4.0.6\";\n\nfunction addEventHandler(state, eventName, eventHandler) {\n  if (Array.isArray(eventName)) {\n    for (const singleEventName of eventName) {\n      addEventHandler(state, singleEventName, eventHandler);\n    }\n\n    return;\n  }\n\n  if (!state.eventHandlers[eventName]) {\n    state.eventHandlers[eventName] = [];\n  }\n\n  state.eventHandlers[eventName].push(eventHandler);\n}\n\nconst OAuthAppOctokit = core.Octokit.defaults({\n  userAgent: `octokit-oauth-app.js/${VERSION} ${universalUserAgent.getUserAgent()}`\n});\n\nasync function emitEvent(state, context) {\n  const {\n    name,\n    action\n  } = context;\n\n  if (state.eventHandlers[`${name}.${action}`]) {\n    for (const eventHandler of state.eventHandlers[`${name}.${action}`]) {\n      await eventHandler(context);\n    }\n  }\n\n  if (state.eventHandlers[name]) {\n    for (const eventHandler of state.eventHandlers[name]) {\n      await eventHandler(context);\n    }\n  }\n}\n\nasync function getUserOctokitWithState(state, options) {\n  return state.octokit.auth({\n    type: \"oauth-user\",\n    ...options,\n\n    async factory(options) {\n      const octokit = new state.Octokit({\n        authStrategy: authOauthUser.createOAuthUserAuth,\n        auth: options\n      });\n      const authentication = await octokit.auth({\n        type: \"get\"\n      });\n      await emitEvent(state, {\n        name: \"token\",\n        action: \"created\",\n        token: authentication.token,\n        scopes: authentication.scopes,\n        authentication,\n        octokit\n      });\n      return octokit;\n    }\n\n  });\n}\n\nfunction getWebFlowAuthorizationUrlWithState(state, options) {\n  const optionsWithDefaults = {\n    clientId: state.clientId,\n    request: state.octokit.request,\n    ...options,\n    allowSignup: options.allowSignup || state.allowSignup,\n    scopes: options.scopes || state.defaultScopes\n  };\n  return OAuthMethods.getWebFlowAuthorizationUrl({\n    clientType: state.clientType,\n    ...optionsWithDefaults\n  });\n}\n\nasync function createTokenWithState(state, options) {\n  const authentication = await state.octokit.auth({\n    type: \"oauth-user\",\n    ...options\n  });\n  await emitEvent(state, {\n    name: \"token\",\n    action: \"created\",\n    token: authentication.token,\n    scopes: authentication.scopes,\n    authentication,\n    octokit: new state.Octokit({\n      authStrategy: OAuthAppAuth.createOAuthUserAuth,\n      auth: {\n        clientType: state.clientType,\n        clientId: state.clientId,\n        clientSecret: state.clientSecret,\n        token: authentication.token,\n        scopes: authentication.scopes,\n        refreshToken: authentication.refreshToken,\n        expiresAt: authentication.expiresAt,\n        refreshTokenExpiresAt: authentication.refreshTokenExpiresAt\n      }\n    })\n  });\n  return {\n    authentication\n  };\n}\n\nasync function checkTokenWithState(state, options) {\n  const result = await OAuthMethods.checkToken({\n    // @ts-expect-error not worth the extra code to appease TS\n    clientType: state.clientType,\n    clientId: state.clientId,\n    clientSecret: state.clientSecret,\n    request: state.octokit.request,\n    ...options\n  });\n  Object.assign(result.authentication, {\n    type: \"token\",\n    tokenType: \"oauth\"\n  });\n  return result;\n}\n\nasync function resetTokenWithState(state, options) {\n  const optionsWithDefaults = {\n    clientId: state.clientId,\n    clientSecret: state.clientSecret,\n    request: state.octokit.request,\n    ...options\n  };\n\n  if (state.clientType === \"oauth-app\") {\n    const response = await OAuthMethods.resetToken({\n      clientType: \"oauth-app\",\n      ...optionsWithDefaults\n    });\n    const authentication = Object.assign(response.authentication, {\n      type: \"token\",\n      tokenType: \"oauth\"\n    });\n    await emitEvent(state, {\n      name: \"token\",\n      action: \"reset\",\n      token: response.authentication.token,\n      scopes: response.authentication.scopes || undefined,\n      authentication: authentication,\n      octokit: new state.Octokit({\n        authStrategy: authOauthUser.createOAuthUserAuth,\n        auth: {\n          clientType: state.clientType,\n          clientId: state.clientId,\n          clientSecret: state.clientSecret,\n          token: response.authentication.token,\n          scopes: response.authentication.scopes\n        }\n      })\n    });\n    return { ...response,\n      authentication\n    };\n  }\n\n  const response = await OAuthMethods.resetToken({\n    clientType: \"github-app\",\n    ...optionsWithDefaults\n  });\n  const authentication = Object.assign(response.authentication, {\n    type: \"token\",\n    tokenType: \"oauth\"\n  });\n  await emitEvent(state, {\n    name: \"token\",\n    action: \"reset\",\n    token: response.authentication.token,\n    authentication: authentication,\n    octokit: new state.Octokit({\n      authStrategy: authOauthUser.createOAuthUserAuth,\n      auth: {\n        clientType: state.clientType,\n        clientId: state.clientId,\n        clientSecret: state.clientSecret,\n        token: response.authentication.token\n      }\n    })\n  });\n  return { ...response,\n    authentication\n  };\n}\n\nasync function refreshTokenWithState(state, options) {\n  if (state.clientType === \"oauth-app\") {\n    throw new Error(\"[@octokit/oauth-app] app.refreshToken() is not supported for OAuth Apps\");\n  }\n\n  const response = await OAuthMethods.refreshToken({\n    clientType: \"github-app\",\n    clientId: state.clientId,\n    clientSecret: state.clientSecret,\n    request: state.octokit.request,\n    refreshToken: options.refreshToken\n  });\n  const authentication = Object.assign(response.authentication, {\n    type: \"token\",\n    tokenType: \"oauth\"\n  });\n  await emitEvent(state, {\n    name: \"token\",\n    action: \"refreshed\",\n    token: response.authentication.token,\n    authentication: authentication,\n    octokit: new state.Octokit({\n      authStrategy: authOauthUser.createOAuthUserAuth,\n      auth: {\n        clientType: state.clientType,\n        clientId: state.clientId,\n        clientSecret: state.clientSecret,\n        token: response.authentication.token\n      }\n    })\n  });\n  return { ...response,\n    authentication\n  };\n}\n\nasync function scopeTokenWithState(state, options) {\n  if (state.clientType === \"oauth-app\") {\n    throw new Error(\"[@octokit/oauth-app] app.scopeToken() is not supported for OAuth Apps\");\n  }\n\n  const response = await OAuthMethods.scopeToken({\n    clientType: \"github-app\",\n    clientId: state.clientId,\n    clientSecret: state.clientSecret,\n    request: state.octokit.request,\n    ...options\n  });\n  const authentication = Object.assign(response.authentication, {\n    type: \"token\",\n    tokenType: \"oauth\"\n  });\n  await emitEvent(state, {\n    name: \"token\",\n    action: \"scoped\",\n    token: response.authentication.token,\n    authentication: authentication,\n    octokit: new state.Octokit({\n      authStrategy: authOauthUser.createOAuthUserAuth,\n      auth: {\n        clientType: state.clientType,\n        clientId: state.clientId,\n        clientSecret: state.clientSecret,\n        token: response.authentication.token\n      }\n    })\n  });\n  return { ...response,\n    authentication\n  };\n}\n\nasync function deleteTokenWithState(state, options) {\n  const optionsWithDefaults = {\n    clientId: state.clientId,\n    clientSecret: state.clientSecret,\n    request: state.octokit.request,\n    ...options\n  };\n  const response = state.clientType === \"oauth-app\" ? await OAuthMethods.deleteToken({\n    clientType: \"oauth-app\",\n    ...optionsWithDefaults\n  }) : // istanbul ignore next\n  await OAuthMethods.deleteToken({\n    clientType: \"github-app\",\n    ...optionsWithDefaults\n  });\n  await emitEvent(state, {\n    name: \"token\",\n    action: \"deleted\",\n    token: options.token,\n    octokit: new state.Octokit({\n      authStrategy: authUnauthenticated.createUnauthenticatedAuth,\n      auth: {\n        reason: `Handling \"token.deleted\" event. The access for the token has been revoked.`\n      }\n    })\n  });\n  return response;\n}\n\nasync function deleteAuthorizationWithState(state, options) {\n  const optionsWithDefaults = {\n    clientId: state.clientId,\n    clientSecret: state.clientSecret,\n    request: state.octokit.request,\n    ...options\n  };\n  const response = state.clientType === \"oauth-app\" ? await OAuthMethods.deleteAuthorization({\n    clientType: \"oauth-app\",\n    ...optionsWithDefaults\n  }) : // istanbul ignore next\n  await OAuthMethods.deleteAuthorization({\n    clientType: \"github-app\",\n    ...optionsWithDefaults\n  });\n  await emitEvent(state, {\n    name: \"token\",\n    action: \"deleted\",\n    token: options.token,\n    octokit: new state.Octokit({\n      authStrategy: authUnauthenticated.createUnauthenticatedAuth,\n      auth: {\n        reason: `Handling \"token.deleted\" event. The access for the token has been revoked.`\n      }\n    })\n  });\n  await emitEvent(state, {\n    name: \"authorization\",\n    action: \"deleted\",\n    token: options.token,\n    octokit: new state.Octokit({\n      authStrategy: authUnauthenticated.createUnauthenticatedAuth,\n      auth: {\n        reason: `Handling \"authorization.deleted\" event. The access for the app has been revoked.`\n      }\n    })\n  });\n  return response;\n}\n\nfunction parseRequest(request) {\n  const {\n    method,\n    url,\n    headers\n  } = request;\n\n  async function text() {\n    const text = await new Promise((resolve, reject) => {\n      let bodyChunks = [];\n      request.on(\"error\", reject).on(\"data\", chunk => bodyChunks.push(chunk)).on(\"end\", () => resolve(Buffer.concat(bodyChunks).toString()));\n    });\n    return text;\n  }\n\n  return {\n    method,\n    url,\n    headers,\n    text\n  };\n}\n\nfunction sendResponse(octokitResponse, response) {\n  response.writeHead(octokitResponse.status, octokitResponse.headers);\n  response.end(octokitResponse.text);\n}\n\nfunction onUnhandledRequestDefault(request) {\n  return {\n    status: 404,\n    headers: {\n      \"content-type\": \"application/json\"\n    },\n    text: JSON.stringify({\n      error: `Unknown route: ${request.method} ${request.url}`\n    })\n  };\n} // @ts-ignore - requires esModuleInterop flag\n\n\nasync function handleRequest(app, _ref, request) {\n  let {\n    pathPrefix = \"/api/github/oauth\"\n  } = _ref;\n\n  if (request.method === \"OPTIONS\") {\n    return {\n      status: 200,\n      headers: {\n        \"access-control-allow-origin\": \"*\",\n        \"access-control-allow-methods\": \"*\",\n        \"access-control-allow-headers\": \"Content-Type, User-Agent, Authorization\"\n      }\n    };\n  } // request.url may include ?query parameters which we don't want for `route`\n  // hence the workaround using new URL()\n\n\n  const {\n    pathname\n  } = new URL(request.url, \"http://localhost\");\n  const route = [request.method, pathname].join(\" \");\n  const routes = {\n    getLogin: `GET ${pathPrefix}/login`,\n    getCallback: `GET ${pathPrefix}/callback`,\n    createToken: `POST ${pathPrefix}/token`,\n    getToken: `GET ${pathPrefix}/token`,\n    patchToken: `PATCH ${pathPrefix}/token`,\n    patchRefreshToken: `PATCH ${pathPrefix}/refresh-token`,\n    scopeToken: `POST ${pathPrefix}/token/scoped`,\n    deleteToken: `DELETE ${pathPrefix}/token`,\n    deleteGrant: `DELETE ${pathPrefix}/grant`\n  }; // handle unknown routes\n\n  if (!Object.values(routes).includes(route)) {\n    return null;\n  }\n\n  let json;\n\n  try {\n    const text = await request.text();\n    json = text ? JSON.parse(text) : {};\n  } catch (error) {\n    return {\n      status: 400,\n      headers: {\n        \"content-type\": \"application/json\",\n        \"access-control-allow-origin\": \"*\"\n      },\n      text: JSON.stringify({\n        error: \"[@octokit/oauth-app] request error\"\n      })\n    };\n  }\n\n  const {\n    searchParams\n  } = new URL(request.url, \"http://localhost\");\n  const query = fromEntries(searchParams);\n  const headers = request.headers;\n\n  try {\n    var _headers$authorizatio6;\n\n    if (route === routes.getLogin) {\n      const {\n        url\n      } = app.getWebFlowAuthorizationUrl({\n        state: query.state,\n        scopes: query.scopes ? query.scopes.split(\",\") : undefined,\n        allowSignup: query.allowSignup !== \"false\",\n        redirectUrl: query.redirectUrl\n      });\n      return {\n        status: 302,\n        headers: {\n          location: url\n        }\n      };\n    }\n\n    if (route === routes.getCallback) {\n      if (query.error) {\n        throw new Error(`[@octokit/oauth-app] ${query.error} ${query.error_description}`);\n      }\n\n      if (!query.code) {\n        throw new Error('[@octokit/oauth-app] \"code\" parameter is required');\n      }\n\n      const {\n        authentication: {\n          token\n        }\n      } = await app.createToken({\n        code: query.code\n      });\n      return {\n        status: 200,\n        headers: {\n          \"content-type\": \"text/html\"\n        },\n        text: `<h1>Token created successfull</h1>\n    \n<p>Your token is: <strong>${token}</strong>. Copy it now as it cannot be shown again.</p>`\n      };\n    }\n\n    if (route === routes.createToken) {\n      const {\n        code,\n        redirectUrl\n      } = json;\n\n      if (!code) {\n        throw new Error('[@octokit/oauth-app] \"code\" parameter is required');\n      }\n\n      const result = await app.createToken({\n        code,\n        redirectUrl\n      }); // @ts-ignore\n\n      delete result.authentication.clientSecret;\n      return {\n        status: 201,\n        headers: {\n          \"content-type\": \"application/json\",\n          \"access-control-allow-origin\": \"*\"\n        },\n        text: JSON.stringify(result)\n      };\n    }\n\n    if (route === routes.getToken) {\n      var _headers$authorizatio;\n\n      const token = (_headers$authorizatio = headers.authorization) === null || _headers$authorizatio === void 0 ? void 0 : _headers$authorizatio.substr(\"token \".length);\n\n      if (!token) {\n        throw new Error('[@octokit/oauth-app] \"Authorization\" header is required');\n      }\n\n      const result = await app.checkToken({\n        token\n      }); // @ts-ignore\n\n      delete result.authentication.clientSecret;\n      return {\n        status: 200,\n        headers: {\n          \"content-type\": \"application/json\",\n          \"access-control-allow-origin\": \"*\"\n        },\n        text: JSON.stringify(result)\n      };\n    }\n\n    if (route === routes.patchToken) {\n      var _headers$authorizatio2;\n\n      const token = (_headers$authorizatio2 = headers.authorization) === null || _headers$authorizatio2 === void 0 ? void 0 : _headers$authorizatio2.substr(\"token \".length);\n\n      if (!token) {\n        throw new Error('[@octokit/oauth-app] \"Authorization\" header is required');\n      }\n\n      const result = await app.resetToken({\n        token\n      }); // @ts-ignore\n\n      delete result.authentication.clientSecret;\n      return {\n        status: 200,\n        headers: {\n          \"content-type\": \"application/json\",\n          \"access-control-allow-origin\": \"*\"\n        },\n        text: JSON.stringify(result)\n      };\n    }\n\n    if (route === routes.patchRefreshToken) {\n      var _headers$authorizatio3;\n\n      const token = (_headers$authorizatio3 = headers.authorization) === null || _headers$authorizatio3 === void 0 ? void 0 : _headers$authorizatio3.substr(\"token \".length);\n\n      if (!token) {\n        throw new Error('[@octokit/oauth-app] \"Authorization\" header is required');\n      }\n\n      const {\n        refreshToken\n      } = json;\n\n      if (!refreshToken) {\n        throw new Error(\"[@octokit/oauth-app] refreshToken must be sent in request body\");\n      }\n\n      const result = await app.refreshToken({\n        refreshToken\n      }); // @ts-ignore\n\n      delete result.authentication.clientSecret;\n      return {\n        status: 200,\n        headers: {\n          \"content-type\": \"application/json\",\n          \"access-control-allow-origin\": \"*\"\n        },\n        text: JSON.stringify(result)\n      };\n    }\n\n    if (route === routes.scopeToken) {\n      var _headers$authorizatio4;\n\n      const token = (_headers$authorizatio4 = headers.authorization) === null || _headers$authorizatio4 === void 0 ? void 0 : _headers$authorizatio4.substr(\"token \".length);\n\n      if (!token) {\n        throw new Error('[@octokit/oauth-app] \"Authorization\" header is required');\n      }\n\n      const result = await app.scopeToken({\n        token,\n        ...json\n      }); // @ts-ignore\n\n      delete result.authentication.clientSecret;\n      return {\n        status: 200,\n        headers: {\n          \"content-type\": \"application/json\",\n          \"access-control-allow-origin\": \"*\"\n        },\n        text: JSON.stringify(result)\n      };\n    }\n\n    if (route === routes.deleteToken) {\n      var _headers$authorizatio5;\n\n      const token = (_headers$authorizatio5 = headers.authorization) === null || _headers$authorizatio5 === void 0 ? void 0 : _headers$authorizatio5.substr(\"token \".length);\n\n      if (!token) {\n        throw new Error('[@octokit/oauth-app] \"Authorization\" header is required');\n      }\n\n      await app.deleteToken({\n        token\n      });\n      return {\n        status: 204,\n        headers: {\n          \"access-control-allow-origin\": \"*\"\n        }\n      };\n    } // route === routes.deleteGrant\n\n\n    const token = (_headers$authorizatio6 = headers.authorization) === null || _headers$authorizatio6 === void 0 ? void 0 : _headers$authorizatio6.substr(\"token \".length);\n\n    if (!token) {\n      throw new Error('[@octokit/oauth-app] \"Authorization\" header is required');\n    }\n\n    await app.deleteAuthorization({\n      token\n    });\n    return {\n      status: 204,\n      headers: {\n        \"access-control-allow-origin\": \"*\"\n      }\n    };\n  } catch (error) {\n    return {\n      status: 400,\n      headers: {\n        \"content-type\": \"application/json\",\n        \"access-control-allow-origin\": \"*\"\n      },\n      text: JSON.stringify({\n        error: error.message\n      })\n    };\n  }\n}\n\nfunction onUnhandledRequestDefaultNode(request, response) {\n  const octokitRequest = parseRequest(request);\n  const octokitResponse = onUnhandledRequestDefault(octokitRequest);\n  sendResponse(octokitResponse, response);\n}\n\nfunction createNodeMiddleware(app) {\n  let {\n    pathPrefix,\n    onUnhandledRequest = onUnhandledRequestDefaultNode\n  } = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  return async function (request, response, next) {\n    const octokitRequest = parseRequest(request);\n    const octokitResponse = await handleRequest(app, {\n      pathPrefix\n    }, octokitRequest);\n\n    if (octokitResponse) {\n      sendResponse(octokitResponse, response);\n    } else if (typeof next === \"function\") {\n      next();\n    } else {\n      onUnhandledRequest(request, response);\n    }\n  };\n}\n\nfunction parseRequest$1(request) {\n  // @ts-ignore Worker environment supports fromEntries/entries.\n  const headers = Object.fromEntries(request.headers.entries());\n  return {\n    method: request.method,\n    url: request.url,\n    headers,\n    text: () => request.text()\n  };\n}\n\nfunction sendResponse$1(octokitResponse) {\n  return new Response(octokitResponse.text, {\n    status: octokitResponse.status,\n    headers: octokitResponse.headers\n  });\n}\n\nasync function onUnhandledRequestDefaultWebWorker(request) {\n  const octokitRequest = parseRequest$1(request);\n  const octokitResponse = onUnhandledRequestDefault(octokitRequest);\n  return sendResponse$1(octokitResponse);\n}\n\nfunction createWebWorkerHandler(app) {\n  let {\n    pathPrefix,\n    onUnhandledRequest = onUnhandledRequestDefaultWebWorker\n  } = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  return async function (request) {\n    const octokitRequest = parseRequest$1(request);\n    const octokitResponse = await handleRequest(app, {\n      pathPrefix\n    }, octokitRequest);\n    return octokitResponse ? sendResponse$1(octokitResponse) : await onUnhandledRequest(request);\n  };\n}\n/** @deprecated */\n\n\nfunction createCloudflareHandler() {\n  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n    args[_key] = arguments[_key];\n  }\n\n  args[0].octokit.log.warn(\"[@octokit/oauth-app] `createCloudflareHandler` is deprecated, use `createWebWorkerHandler` instead\");\n  return createWebWorkerHandler(...args);\n}\n\nfunction parseRequest$2(request) {\n  const {\n    method\n  } = request.requestContext.http;\n  let url = request.rawPath;\n  const {\n    stage\n  } = request.requestContext;\n  if (url.startsWith(\"/\" + stage)) url = url.substring(stage.length + 1);\n  if (request.rawQueryString) url += \"?\" + request.rawQueryString;\n  const headers = request.headers;\n\n  const text = async () => request.body || \"\";\n\n  return {\n    method,\n    url,\n    headers,\n    text\n  };\n}\n\nfunction sendResponse$2(octokitResponse) {\n  return {\n    statusCode: octokitResponse.status,\n    headers: octokitResponse.headers,\n    body: octokitResponse.text\n  };\n}\n\nasync function onUnhandledRequestDefaultAWSAPIGatewayV2(event) {\n  const request = parseRequest$2(event);\n  const response = onUnhandledRequestDefault(request);\n  return sendResponse$2(response);\n}\n\nfunction createAWSLambdaAPIGatewayV2Handler(app) {\n  let {\n    pathPrefix,\n    onUnhandledRequest = onUnhandledRequestDefaultAWSAPIGatewayV2\n  } = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  return async function (event) {\n    const request = parseRequest$2(event);\n    const response = await handleRequest(app, {\n      pathPrefix\n    }, request);\n    return response ? sendResponse$2(response) : onUnhandledRequest(event);\n  };\n}\n\nclass OAuthApp {\n  constructor(options) {\n    const Octokit = options.Octokit || OAuthAppOctokit;\n    this.type = options.clientType || \"oauth-app\";\n    const octokit = new Octokit({\n      authStrategy: OAuthAppAuth.createOAuthAppAuth,\n      auth: {\n        clientType: this.type,\n        clientId: options.clientId,\n        clientSecret: options.clientSecret\n      }\n    });\n    const state = {\n      clientType: this.type,\n      clientId: options.clientId,\n      clientSecret: options.clientSecret,\n      // @ts-expect-error defaultScopes not permitted for GitHub Apps\n      defaultScopes: options.defaultScopes || [],\n      allowSignup: options.allowSignup,\n      baseUrl: options.baseUrl,\n      log: options.log,\n      Octokit,\n      octokit,\n      eventHandlers: {}\n    };\n    this.on = addEventHandler.bind(null, state); // @ts-expect-error TODO: figure this out\n\n    this.octokit = octokit;\n    this.getUserOctokit = getUserOctokitWithState.bind(null, state);\n    this.getWebFlowAuthorizationUrl = getWebFlowAuthorizationUrlWithState.bind(null, state);\n    this.createToken = createTokenWithState.bind(null, state);\n    this.checkToken = checkTokenWithState.bind(null, state);\n    this.resetToken = resetTokenWithState.bind(null, state);\n    this.refreshToken = refreshTokenWithState.bind(null, state);\n    this.scopeToken = scopeTokenWithState.bind(null, state);\n    this.deleteToken = deleteTokenWithState.bind(null, state);\n    this.deleteAuthorization = deleteAuthorizationWithState.bind(null, state);\n  }\n\n  static defaults(defaults) {\n    const OAuthAppWithDefaults = class extends this {\n      constructor() {\n        super({ ...defaults,\n          ...(arguments.length <= 0 ? undefined : arguments[0])\n        });\n      }\n\n    };\n    return OAuthAppWithDefaults;\n  }\n\n}\n\nOAuthApp.VERSION = VERSION;\nexports.OAuthApp = OAuthApp;\nexports.createAWSLambdaAPIGatewayV2Handler = createAWSLambdaAPIGatewayV2Handler;\nexports.createCloudflareHandler = createCloudflareHandler;\nexports.createNodeMiddleware = createNodeMiddleware;\nexports.createWebWorkerHandler = createWebWorkerHandler;","map":{"version":3,"mappings":"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","names":["VERSION","addEventHandler","state","eventName","eventHandler","Array","isArray","singleEventName","eventHandlers","push","OAuthAppOctokit","Octokit","defaults","userAgent","getUserAgent","emitEvent","context","name","action","getUserOctokitWithState","options","octokit","auth","type","factory","authStrategy","createOAuthUserAuth","authentication","token","scopes","getWebFlowAuthorizationUrlWithState","optionsWithDefaults","clientId","request","allowSignup","defaultScopes","OAuthMethods","clientType","createTokenWithState","OAuthAppAuth","clientSecret","refreshToken","expiresAt","refreshTokenExpiresAt","checkTokenWithState","result","Object","assign","tokenType","resetTokenWithState","response","undefined","refreshTokenWithState","Error","scopeTokenWithState","deleteTokenWithState","createUnauthenticatedAuth","reason","deleteAuthorizationWithState","parseRequest","method","url","headers","text","Promise","resolve","reject","bodyChunks","on","chunk","Buffer","concat","toString","sendResponse","octokitResponse","writeHead","status","end","onUnhandledRequestDefault","JSON","stringify","error","handleRequest","app","pathPrefix","pathname","URL","route","join","routes","getLogin","getCallback","createToken","getToken","patchToken","patchRefreshToken","scopeToken","deleteToken","deleteGrant","values","includes","json","parse","searchParams","query","fromEntries","getWebFlowAuthorizationUrl","split","redirectUrl","location","error_description","code","authorization","_headers$authorizatio","substr","length","checkToken","_headers$authorizatio2","resetToken","_headers$authorizatio3","_headers$authorizatio4","_headers$authorizatio5","_headers$authorizatio6","deleteAuthorization","message","onUnhandledRequestDefaultNode","octokitRequest","createNodeMiddleware","onUnhandledRequest","next","entries","Response","onUnhandledRequestDefaultWebWorker","createWebWorkerHandler","createCloudflareHandler","args","log","warn","requestContext","http","rawPath","stage","startsWith","substring","rawQueryString","body","statusCode","onUnhandledRequestDefaultAWSAPIGatewayV2","event","createAWSLambdaAPIGatewayV2Handler","OAuthApp","constructor","createOAuthAppAuth","baseUrl","bind","getUserOctokit","OAuthAppWithDefaults"],"sources":["/home/hosainy/documents/oden-project/repos/sas-interview-assignment/node_modules/@octokit/oauth-app/dist-src/version.js","/home/hosainy/documents/oden-project/repos/sas-interview-assignment/node_modules/@octokit/oauth-app/dist-src/add-event-handler.js","/home/hosainy/documents/oden-project/repos/sas-interview-assignment/node_modules/@octokit/oauth-app/dist-src/oauth-app-octokit.js","/home/hosainy/documents/oden-project/repos/sas-interview-assignment/node_modules/@octokit/oauth-app/dist-src/emit-event.js","/home/hosainy/documents/oden-project/repos/sas-interview-assignment/node_modules/@octokit/oauth-app/dist-src/methods/get-user-octokit.js","/home/hosainy/documents/oden-project/repos/sas-interview-assignment/node_modules/@octokit/oauth-app/dist-src/methods/get-web-flow-authorization-url.js","/home/hosainy/documents/oden-project/repos/sas-interview-assignment/node_modules/@octokit/oauth-app/dist-src/methods/create-token.js","/home/hosainy/documents/oden-project/repos/sas-interview-assignment/node_modules/@octokit/oauth-app/dist-src/methods/check-token.js","/home/hosainy/documents/oden-project/repos/sas-interview-assignment/node_modules/@octokit/oauth-app/dist-src/methods/reset-token.js","/home/hosainy/documents/oden-project/repos/sas-interview-assignment/node_modules/@octokit/oauth-app/dist-src/methods/refresh-token.js","/home/hosainy/documents/oden-project/repos/sas-interview-assignment/node_modules/@octokit/oauth-app/dist-src/methods/scope-token.js","/home/hosainy/documents/oden-project/repos/sas-interview-assignment/node_modules/@octokit/oauth-app/dist-src/methods/delete-token.js","/home/hosainy/documents/oden-project/repos/sas-interview-assignment/node_modules/@octokit/oauth-app/dist-src/methods/delete-authorization.js","/home/hosainy/documents/oden-project/repos/sas-interview-assignment/node_modules/@octokit/oauth-app/dist-src/middleware/node/parse-request.js","/home/hosainy/documents/oden-project/repos/sas-interview-assignment/node_modules/@octokit/oauth-app/dist-src/middleware/node/send-response.js","/home/hosainy/documents/oden-project/repos/sas-interview-assignment/node_modules/@octokit/oauth-app/dist-src/middleware/on-unhandled-request-default.js","/home/hosainy/documents/oden-project/repos/sas-interview-assignment/node_modules/@octokit/oauth-app/dist-src/middleware/handle-request.js","/home/hosainy/documents/oden-project/repos/sas-interview-assignment/node_modules/@octokit/oauth-app/dist-src/middleware/node/index.js","/home/hosainy/documents/oden-project/repos/sas-interview-assignment/node_modules/@octokit/oauth-app/dist-src/middleware/web-worker/parse-request.js","/home/hosainy/documents/oden-project/repos/sas-interview-assignment/node_modules/@octokit/oauth-app/dist-src/middleware/web-worker/send-response.js","/home/hosainy/documents/oden-project/repos/sas-interview-assignment/node_modules/@octokit/oauth-app/dist-src/middleware/web-worker/index.js","/home/hosainy/documents/oden-project/repos/sas-interview-assignment/node_modules/@octokit/oauth-app/dist-src/middleware/aws-lambda/api-gateway-v2-parse-request.js","/home/hosainy/documents/oden-project/repos/sas-interview-assignment/node_modules/@octokit/oauth-app/dist-src/middleware/aws-lambda/api-gateway-v2-send-response.js","/home/hosainy/documents/oden-project/repos/sas-interview-assignment/node_modules/@octokit/oauth-app/dist-src/middleware/aws-lambda/api-gateway-v2.js","/home/hosainy/documents/oden-project/repos/sas-interview-assignment/node_modules/@octokit/oauth-app/dist-src/index.js"],"sourcesContent":["export const VERSION = \"4.0.6\";\n","export function addEventHandler(state, eventName, eventHandler) {\n    if (Array.isArray(eventName)) {\n        for (const singleEventName of eventName) {\n            addEventHandler(state, singleEventName, eventHandler);\n        }\n        return;\n    }\n    if (!state.eventHandlers[eventName]) {\n        state.eventHandlers[eventName] = [];\n    }\n    state.eventHandlers[eventName].push(eventHandler);\n}\n","import { Octokit } from \"@octokit/core\";\nimport { getUserAgent } from \"universal-user-agent\";\nimport { VERSION } from \"./version\";\nexport const OAuthAppOctokit = Octokit.defaults({\n    userAgent: `octokit-oauth-app.js/${VERSION} ${getUserAgent()}`,\n});\n","export async function emitEvent(state, context) {\n    const { name, action } = context;\n    if (state.eventHandlers[`${name}.${action}`]) {\n        for (const eventHandler of state.eventHandlers[`${name}.${action}`]) {\n            await eventHandler(context);\n        }\n    }\n    if (state.eventHandlers[name]) {\n        for (const eventHandler of state.eventHandlers[name]) {\n            await eventHandler(context);\n        }\n    }\n}\n","import { createOAuthUserAuth, } from \"@octokit/auth-oauth-user\";\nimport { emitEvent } from \"../emit-event\";\nexport async function getUserOctokitWithState(state, options) {\n    return state.octokit.auth({\n        type: \"oauth-user\",\n        ...options,\n        async factory(options) {\n            const octokit = new state.Octokit({\n                authStrategy: createOAuthUserAuth,\n                auth: options,\n            });\n            const authentication = (await octokit.auth({\n                type: \"get\",\n            }));\n            await emitEvent(state, {\n                name: \"token\",\n                action: \"created\",\n                token: authentication.token,\n                scopes: authentication.scopes,\n                authentication,\n                octokit,\n            });\n            return octokit;\n        },\n    });\n}\n","import * as OAuthMethods from \"@octokit/oauth-methods\";\nexport function getWebFlowAuthorizationUrlWithState(state, options) {\n    const optionsWithDefaults = {\n        clientId: state.clientId,\n        request: state.octokit.request,\n        ...options,\n        allowSignup: options.allowSignup || state.allowSignup,\n        scopes: options.scopes || state.defaultScopes,\n    };\n    return OAuthMethods.getWebFlowAuthorizationUrl({\n        clientType: state.clientType,\n        ...optionsWithDefaults,\n    });\n}\n","import * as OAuthAppAuth from \"@octokit/auth-oauth-app\";\nimport { emitEvent } from \"../emit-event\";\nexport async function createTokenWithState(state, options) {\n    const authentication = await state.octokit.auth({\n        type: \"oauth-user\",\n        ...options,\n    });\n    await emitEvent(state, {\n        name: \"token\",\n        action: \"created\",\n        token: authentication.token,\n        scopes: authentication.scopes,\n        authentication,\n        octokit: new state.Octokit({\n            authStrategy: OAuthAppAuth.createOAuthUserAuth,\n            auth: {\n                clientType: state.clientType,\n                clientId: state.clientId,\n                clientSecret: state.clientSecret,\n                token: authentication.token,\n                scopes: authentication.scopes,\n                refreshToken: authentication.refreshToken,\n                expiresAt: authentication.expiresAt,\n                refreshTokenExpiresAt: authentication.refreshTokenExpiresAt,\n            },\n        }),\n    });\n    return { authentication };\n}\n","import * as OAuthMethods from \"@octokit/oauth-methods\";\nexport async function checkTokenWithState(state, options) {\n    const result = await OAuthMethods.checkToken({\n        // @ts-expect-error not worth the extra code to appease TS\n        clientType: state.clientType,\n        clientId: state.clientId,\n        clientSecret: state.clientSecret,\n        request: state.octokit.request,\n        ...options,\n    });\n    Object.assign(result.authentication, { type: \"token\", tokenType: \"oauth\" });\n    return result;\n}\n","import * as OAuthMethods from \"@octokit/oauth-methods\";\nimport { emitEvent } from \"../emit-event\";\nimport { createOAuthUserAuth } from \"@octokit/auth-oauth-user\";\nexport async function resetTokenWithState(state, options) {\n    const optionsWithDefaults = {\n        clientId: state.clientId,\n        clientSecret: state.clientSecret,\n        request: state.octokit.request,\n        ...options,\n    };\n    if (state.clientType === \"oauth-app\") {\n        const response = await OAuthMethods.resetToken({\n            clientType: \"oauth-app\",\n            ...optionsWithDefaults,\n        });\n        const authentication = Object.assign(response.authentication, {\n            type: \"token\",\n            tokenType: \"oauth\",\n        });\n        await emitEvent(state, {\n            name: \"token\",\n            action: \"reset\",\n            token: response.authentication.token,\n            scopes: response.authentication.scopes || undefined,\n            authentication: authentication,\n            octokit: new state.Octokit({\n                authStrategy: createOAuthUserAuth,\n                auth: {\n                    clientType: state.clientType,\n                    clientId: state.clientId,\n                    clientSecret: state.clientSecret,\n                    token: response.authentication.token,\n                    scopes: response.authentication.scopes,\n                },\n            }),\n        });\n        return { ...response, authentication };\n    }\n    const response = await OAuthMethods.resetToken({\n        clientType: \"github-app\",\n        ...optionsWithDefaults,\n    });\n    const authentication = Object.assign(response.authentication, {\n        type: \"token\",\n        tokenType: \"oauth\",\n    });\n    await emitEvent(state, {\n        name: \"token\",\n        action: \"reset\",\n        token: response.authentication.token,\n        authentication: authentication,\n        octokit: new state.Octokit({\n            authStrategy: createOAuthUserAuth,\n            auth: {\n                clientType: state.clientType,\n                clientId: state.clientId,\n                clientSecret: state.clientSecret,\n                token: response.authentication.token,\n            },\n        }),\n    });\n    return { ...response, authentication };\n}\n","import * as OAuthMethods from \"@octokit/oauth-methods\";\nimport { emitEvent } from \"../emit-event\";\nimport { createOAuthUserAuth } from \"@octokit/auth-oauth-user\";\nexport async function refreshTokenWithState(state, options) {\n    if (state.clientType === \"oauth-app\") {\n        throw new Error(\"[@octokit/oauth-app] app.refreshToken() is not supported for OAuth Apps\");\n    }\n    const response = await OAuthMethods.refreshToken({\n        clientType: \"github-app\",\n        clientId: state.clientId,\n        clientSecret: state.clientSecret,\n        request: state.octokit.request,\n        refreshToken: options.refreshToken,\n    });\n    const authentication = Object.assign(response.authentication, {\n        type: \"token\",\n        tokenType: \"oauth\",\n    });\n    await emitEvent(state, {\n        name: \"token\",\n        action: \"refreshed\",\n        token: response.authentication.token,\n        authentication: authentication,\n        octokit: new state.Octokit({\n            authStrategy: createOAuthUserAuth,\n            auth: {\n                clientType: state.clientType,\n                clientId: state.clientId,\n                clientSecret: state.clientSecret,\n                token: response.authentication.token,\n            },\n        }),\n    });\n    return { ...response, authentication };\n}\n","import * as OAuthMethods from \"@octokit/oauth-methods\";\nimport { createOAuthUserAuth } from \"@octokit/auth-oauth-user\";\nimport { emitEvent } from \"../emit-event\";\nexport async function scopeTokenWithState(state, options) {\n    if (state.clientType === \"oauth-app\") {\n        throw new Error(\"[@octokit/oauth-app] app.scopeToken() is not supported for OAuth Apps\");\n    }\n    const response = await OAuthMethods.scopeToken({\n        clientType: \"github-app\",\n        clientId: state.clientId,\n        clientSecret: state.clientSecret,\n        request: state.octokit.request,\n        ...options,\n    });\n    const authentication = Object.assign(response.authentication, {\n        type: \"token\",\n        tokenType: \"oauth\",\n    });\n    await emitEvent(state, {\n        name: \"token\",\n        action: \"scoped\",\n        token: response.authentication.token,\n        authentication: authentication,\n        octokit: new state.Octokit({\n            authStrategy: createOAuthUserAuth,\n            auth: {\n                clientType: state.clientType,\n                clientId: state.clientId,\n                clientSecret: state.clientSecret,\n                token: response.authentication.token,\n            },\n        }),\n    });\n    return { ...response, authentication };\n}\n","import * as OAuthMethods from \"@octokit/oauth-methods\";\nimport { createUnauthenticatedAuth } from \"@octokit/auth-unauthenticated\";\nimport { emitEvent } from \"../emit-event\";\nexport async function deleteTokenWithState(state, options) {\n    const optionsWithDefaults = {\n        clientId: state.clientId,\n        clientSecret: state.clientSecret,\n        request: state.octokit.request,\n        ...options,\n    };\n    const response = state.clientType === \"oauth-app\"\n        ? await OAuthMethods.deleteToken({\n            clientType: \"oauth-app\",\n            ...optionsWithDefaults,\n        })\n        : // istanbul ignore next\n            await OAuthMethods.deleteToken({\n                clientType: \"github-app\",\n                ...optionsWithDefaults,\n            });\n    await emitEvent(state, {\n        name: \"token\",\n        action: \"deleted\",\n        token: options.token,\n        octokit: new state.Octokit({\n            authStrategy: createUnauthenticatedAuth,\n            auth: {\n                reason: `Handling \"token.deleted\" event. The access for the token has been revoked.`,\n            },\n        }),\n    });\n    return response;\n}\n","import * as OAuthMethods from \"@octokit/oauth-methods\";\nimport { createUnauthenticatedAuth } from \"@octokit/auth-unauthenticated\";\nimport { emitEvent } from \"../emit-event\";\nexport async function deleteAuthorizationWithState(state, options) {\n    const optionsWithDefaults = {\n        clientId: state.clientId,\n        clientSecret: state.clientSecret,\n        request: state.octokit.request,\n        ...options,\n    };\n    const response = state.clientType === \"oauth-app\"\n        ? await OAuthMethods.deleteAuthorization({\n            clientType: \"oauth-app\",\n            ...optionsWithDefaults,\n        })\n        : // istanbul ignore next\n            await OAuthMethods.deleteAuthorization({\n                clientType: \"github-app\",\n                ...optionsWithDefaults,\n            });\n    await emitEvent(state, {\n        name: \"token\",\n        action: \"deleted\",\n        token: options.token,\n        octokit: new state.Octokit({\n            authStrategy: createUnauthenticatedAuth,\n            auth: {\n                reason: `Handling \"token.deleted\" event. The access for the token has been revoked.`,\n            },\n        }),\n    });\n    await emitEvent(state, {\n        name: \"authorization\",\n        action: \"deleted\",\n        token: options.token,\n        octokit: new state.Octokit({\n            authStrategy: createUnauthenticatedAuth,\n            auth: {\n                reason: `Handling \"authorization.deleted\" event. The access for the app has been revoked.`,\n            },\n        }),\n    });\n    return response;\n}\n","export function parseRequest(request) {\n    const { method, url, headers } = request;\n    async function text() {\n        const text = await new Promise((resolve, reject) => {\n            let bodyChunks = [];\n            request\n                .on(\"error\", reject)\n                .on(\"data\", (chunk) => bodyChunks.push(chunk))\n                .on(\"end\", () => resolve(Buffer.concat(bodyChunks).toString()));\n        });\n        return text;\n    }\n    return { method, url, headers, text };\n}\n","export function sendResponse(octokitResponse, response) {\n    response.writeHead(octokitResponse.status, octokitResponse.headers);\n    response.end(octokitResponse.text);\n}\n","export function onUnhandledRequestDefault(request) {\n    return {\n        status: 404,\n        headers: { \"content-type\": \"application/json\" },\n        text: JSON.stringify({\n            error: `Unknown route: ${request.method} ${request.url}`,\n        }),\n    };\n}\n","// @ts-ignore - requires esModuleInterop flag\nimport fromEntries from \"fromentries\";\nexport async function handleRequest(app, { pathPrefix = \"/api/github/oauth\" }, request) {\n    if (request.method === \"OPTIONS\") {\n        return {\n            status: 200,\n            headers: {\n                \"access-control-allow-origin\": \"*\",\n                \"access-control-allow-methods\": \"*\",\n                \"access-control-allow-headers\": \"Content-Type, User-Agent, Authorization\",\n            },\n        };\n    }\n    // request.url may include ?query parameters which we don't want for `route`\n    // hence the workaround using new URL()\n    const { pathname } = new URL(request.url, \"http://localhost\");\n    const route = [request.method, pathname].join(\" \");\n    const routes = {\n        getLogin: `GET ${pathPrefix}/login`,\n        getCallback: `GET ${pathPrefix}/callback`,\n        createToken: `POST ${pathPrefix}/token`,\n        getToken: `GET ${pathPrefix}/token`,\n        patchToken: `PATCH ${pathPrefix}/token`,\n        patchRefreshToken: `PATCH ${pathPrefix}/refresh-token`,\n        scopeToken: `POST ${pathPrefix}/token/scoped`,\n        deleteToken: `DELETE ${pathPrefix}/token`,\n        deleteGrant: `DELETE ${pathPrefix}/grant`,\n    };\n    // handle unknown routes\n    if (!Object.values(routes).includes(route)) {\n        return null;\n    }\n    let json;\n    try {\n        const text = await request.text();\n        json = text ? JSON.parse(text) : {};\n    }\n    catch (error) {\n        return {\n            status: 400,\n            headers: {\n                \"content-type\": \"application/json\",\n                \"access-control-allow-origin\": \"*\",\n            },\n            text: JSON.stringify({\n                error: \"[@octokit/oauth-app] request error\",\n            }),\n        };\n    }\n    const { searchParams } = new URL(request.url, \"http://localhost\");\n    const query = fromEntries(searchParams);\n    const headers = request.headers;\n    try {\n        if (route === routes.getLogin) {\n            const { url } = app.getWebFlowAuthorizationUrl({\n                state: query.state,\n                scopes: query.scopes ? query.scopes.split(\",\") : undefined,\n                allowSignup: query.allowSignup !== \"false\",\n                redirectUrl: query.redirectUrl,\n            });\n            return { status: 302, headers: { location: url } };\n        }\n        if (route === routes.getCallback) {\n            if (query.error) {\n                throw new Error(`[@octokit/oauth-app] ${query.error} ${query.error_description}`);\n            }\n            if (!query.code) {\n                throw new Error('[@octokit/oauth-app] \"code\" parameter is required');\n            }\n            const { authentication: { token }, } = await app.createToken({\n                code: query.code,\n            });\n            return {\n                status: 200,\n                headers: {\n                    \"content-type\": \"text/html\",\n                },\n                text: `<h1>Token created successfull</h1>\n    \n<p>Your token is: <strong>${token}</strong>. Copy it now as it cannot be shown again.</p>`,\n            };\n        }\n        if (route === routes.createToken) {\n            const { code, redirectUrl } = json;\n            if (!code) {\n                throw new Error('[@octokit/oauth-app] \"code\" parameter is required');\n            }\n            const result = await app.createToken({\n                code,\n                redirectUrl,\n            });\n            // @ts-ignore\n            delete result.authentication.clientSecret;\n            return {\n                status: 201,\n                headers: {\n                    \"content-type\": \"application/json\",\n                    \"access-control-allow-origin\": \"*\",\n                },\n                text: JSON.stringify(result),\n            };\n        }\n        if (route === routes.getToken) {\n            const token = headers.authorization?.substr(\"token \".length);\n            if (!token) {\n                throw new Error('[@octokit/oauth-app] \"Authorization\" header is required');\n            }\n            const result = await app.checkToken({\n                token,\n            });\n            // @ts-ignore\n            delete result.authentication.clientSecret;\n            return {\n                status: 200,\n                headers: {\n                    \"content-type\": \"application/json\",\n                    \"access-control-allow-origin\": \"*\",\n                },\n                text: JSON.stringify(result),\n            };\n        }\n        if (route === routes.patchToken) {\n            const token = headers.authorization?.substr(\"token \".length);\n            if (!token) {\n                throw new Error('[@octokit/oauth-app] \"Authorization\" header is required');\n            }\n            const result = await app.resetToken({ token });\n            // @ts-ignore\n            delete result.authentication.clientSecret;\n            return {\n                status: 200,\n                headers: {\n                    \"content-type\": \"application/json\",\n                    \"access-control-allow-origin\": \"*\",\n                },\n                text: JSON.stringify(result),\n            };\n        }\n        if (route === routes.patchRefreshToken) {\n            const token = headers.authorization?.substr(\"token \".length);\n            if (!token) {\n                throw new Error('[@octokit/oauth-app] \"Authorization\" header is required');\n            }\n            const { refreshToken } = json;\n            if (!refreshToken) {\n                throw new Error(\"[@octokit/oauth-app] refreshToken must be sent in request body\");\n            }\n            const result = await app.refreshToken({ refreshToken });\n            // @ts-ignore\n            delete result.authentication.clientSecret;\n            return {\n                status: 200,\n                headers: {\n                    \"content-type\": \"application/json\",\n                    \"access-control-allow-origin\": \"*\",\n                },\n                text: JSON.stringify(result),\n            };\n        }\n        if (route === routes.scopeToken) {\n            const token = headers.authorization?.substr(\"token \".length);\n            if (!token) {\n                throw new Error('[@octokit/oauth-app] \"Authorization\" header is required');\n            }\n            const result = await app.scopeToken({\n                token,\n                ...json,\n            });\n            // @ts-ignore\n            delete result.authentication.clientSecret;\n            return {\n                status: 200,\n                headers: {\n                    \"content-type\": \"application/json\",\n                    \"access-control-allow-origin\": \"*\",\n                },\n                text: JSON.stringify(result),\n            };\n        }\n        if (route === routes.deleteToken) {\n            const token = headers.authorization?.substr(\"token \".length);\n            if (!token) {\n                throw new Error('[@octokit/oauth-app] \"Authorization\" header is required');\n            }\n            await app.deleteToken({\n                token,\n            });\n            return {\n                status: 204,\n                headers: { \"access-control-allow-origin\": \"*\" },\n            };\n        }\n        // route === routes.deleteGrant\n        const token = headers.authorization?.substr(\"token \".length);\n        if (!token) {\n            throw new Error('[@octokit/oauth-app] \"Authorization\" header is required');\n        }\n        await app.deleteAuthorization({\n            token,\n        });\n        return {\n            status: 204,\n            headers: { \"access-control-allow-origin\": \"*\" },\n        };\n    }\n    catch (error) {\n        return {\n            status: 400,\n            headers: {\n                \"content-type\": \"application/json\",\n                \"access-control-allow-origin\": \"*\",\n            },\n            text: JSON.stringify({ error: error.message }),\n        };\n    }\n}\n","import { parseRequest } from \"./parse-request\";\nimport { sendResponse } from \"./send-response\";\nimport { onUnhandledRequestDefault } from \"../on-unhandled-request-default\";\nimport { handleRequest } from \"../handle-request\";\nfunction onUnhandledRequestDefaultNode(request, response) {\n    const octokitRequest = parseRequest(request);\n    const octokitResponse = onUnhandledRequestDefault(octokitRequest);\n    sendResponse(octokitResponse, response);\n}\nexport function createNodeMiddleware(app, { pathPrefix, onUnhandledRequest = onUnhandledRequestDefaultNode, } = {}) {\n    return async function (request, response, next) {\n        const octokitRequest = parseRequest(request);\n        const octokitResponse = await handleRequest(app, { pathPrefix }, octokitRequest);\n        if (octokitResponse) {\n            sendResponse(octokitResponse, response);\n        }\n        else if (typeof next === \"function\") {\n            next();\n        }\n        else {\n            onUnhandledRequest(request, response);\n        }\n    };\n}\n","export function parseRequest(request) {\n    // @ts-ignore Worker environment supports fromEntries/entries.\n    const headers = Object.fromEntries(request.headers.entries());\n    return {\n        method: request.method,\n        url: request.url,\n        headers,\n        text: () => request.text(),\n    };\n}\n","export function sendResponse(octokitResponse) {\n    return new Response(octokitResponse.text, {\n        status: octokitResponse.status,\n        headers: octokitResponse.headers,\n    });\n}\n","import { parseRequest } from \"./parse-request\";\nimport { sendResponse } from \"./send-response\";\nimport { handleRequest } from \"../handle-request\";\nimport { onUnhandledRequestDefault } from \"../on-unhandled-request-default\";\nasync function onUnhandledRequestDefaultWebWorker(request) {\n    const octokitRequest = parseRequest(request);\n    const octokitResponse = onUnhandledRequestDefault(octokitRequest);\n    return sendResponse(octokitResponse);\n}\nexport function createWebWorkerHandler(app, { pathPrefix, onUnhandledRequest = onUnhandledRequestDefaultWebWorker, } = {}) {\n    return async function (request) {\n        const octokitRequest = parseRequest(request);\n        const octokitResponse = await handleRequest(app, { pathPrefix }, octokitRequest);\n        return octokitResponse\n            ? sendResponse(octokitResponse)\n            : await onUnhandledRequest(request);\n    };\n}\n/** @deprecated */\nexport function createCloudflareHandler(...args) {\n    args[0].octokit.log.warn(\"[@octokit/oauth-app] `createCloudflareHandler` is deprecated, use `createWebWorkerHandler` instead\");\n    return createWebWorkerHandler(...args);\n}\n","export function parseRequest(request) {\n    const { method } = request.requestContext.http;\n    let url = request.rawPath;\n    const { stage } = request.requestContext;\n    if (url.startsWith(\"/\" + stage))\n        url = url.substring(stage.length + 1);\n    if (request.rawQueryString)\n        url += \"?\" + request.rawQueryString;\n    const headers = request.headers;\n    const text = async () => request.body || \"\";\n    return { method, url, headers, text };\n}\n","export function sendResponse(octokitResponse) {\n    return {\n        statusCode: octokitResponse.status,\n        headers: octokitResponse.headers,\n        body: octokitResponse.text,\n    };\n}\n","import { parseRequest } from \"./api-gateway-v2-parse-request\";\nimport { sendResponse } from \"./api-gateway-v2-send-response\";\nimport { handleRequest } from \"../handle-request\";\nimport { onUnhandledRequestDefault } from \"../on-unhandled-request-default\";\nasync function onUnhandledRequestDefaultAWSAPIGatewayV2(event) {\n    const request = parseRequest(event);\n    const response = onUnhandledRequestDefault(request);\n    return sendResponse(response);\n}\nexport function createAWSLambdaAPIGatewayV2Handler(app, { pathPrefix, onUnhandledRequest = onUnhandledRequestDefaultAWSAPIGatewayV2, } = {}) {\n    return async function (event) {\n        const request = parseRequest(event);\n        const response = await handleRequest(app, { pathPrefix }, request);\n        return response ? sendResponse(response) : onUnhandledRequest(event);\n    };\n}\n","import { createOAuthAppAuth } from \"@octokit/auth-oauth-app\";\nimport { VERSION } from \"./version\";\nimport { addEventHandler } from \"./add-event-handler\";\nimport { OAuthAppOctokit } from \"./oauth-app-octokit\";\nimport { getUserOctokitWithState, } from \"./methods/get-user-octokit\";\nimport { getWebFlowAuthorizationUrlWithState, } from \"./methods/get-web-flow-authorization-url\";\nimport { createTokenWithState, } from \"./methods/create-token\";\nimport { checkTokenWithState, } from \"./methods/check-token\";\nimport { resetTokenWithState, } from \"./methods/reset-token\";\nimport { refreshTokenWithState, } from \"./methods/refresh-token\";\nimport { scopeTokenWithState, } from \"./methods/scope-token\";\nimport { deleteTokenWithState, } from \"./methods/delete-token\";\nimport { deleteAuthorizationWithState, } from \"./methods/delete-authorization\";\nexport { createNodeMiddleware } from \"./middleware/node/index\";\nexport { createCloudflareHandler, createWebWorkerHandler, } from \"./middleware/web-worker/index\";\nexport { createAWSLambdaAPIGatewayV2Handler } from \"./middleware/aws-lambda/api-gateway-v2\";\nexport class OAuthApp {\n    constructor(options) {\n        const Octokit = options.Octokit || OAuthAppOctokit;\n        this.type = (options.clientType ||\n            \"oauth-app\");\n        const octokit = new Octokit({\n            authStrategy: createOAuthAppAuth,\n            auth: {\n                clientType: this.type,\n                clientId: options.clientId,\n                clientSecret: options.clientSecret,\n            },\n        });\n        const state = {\n            clientType: this.type,\n            clientId: options.clientId,\n            clientSecret: options.clientSecret,\n            // @ts-expect-error defaultScopes not permitted for GitHub Apps\n            defaultScopes: options.defaultScopes || [],\n            allowSignup: options.allowSignup,\n            baseUrl: options.baseUrl,\n            log: options.log,\n            Octokit,\n            octokit,\n            eventHandlers: {},\n        };\n        this.on = addEventHandler.bind(null, state);\n        // @ts-expect-error TODO: figure this out\n        this.octokit = octokit;\n        this.getUserOctokit = getUserOctokitWithState.bind(null, state);\n        this.getWebFlowAuthorizationUrl = getWebFlowAuthorizationUrlWithState.bind(null, state);\n        this.createToken = createTokenWithState.bind(null, state);\n        this.checkToken = checkTokenWithState.bind(null, state);\n        this.resetToken = resetTokenWithState.bind(null, state);\n        this.refreshToken = refreshTokenWithState.bind(null, state);\n        this.scopeToken = scopeTokenWithState.bind(null, state);\n        this.deleteToken = deleteTokenWithState.bind(null, state);\n        this.deleteAuthorization = deleteAuthorizationWithState.bind(null, state);\n    }\n    static defaults(defaults) {\n        const OAuthAppWithDefaults = class extends this {\n            constructor(...args) {\n                super({\n                    ...defaults,\n                    ...args[0],\n                });\n            }\n        };\n        return OAuthAppWithDefaults;\n    }\n}\nOAuthApp.VERSION = VERSION;\n"]},"metadata":{},"sourceType":"script"}