{"ast":null,"code":"var register = require('./lib/register');\n\nvar addHook = require('./lib/add');\n\nvar removeHook = require('./lib/remove'); // bind with array of arguments: https://stackoverflow.com/a/21792913\n\n\nvar bind = Function.bind;\nvar bindable = bind.bind(bind);\n\nfunction bindApi(hook, state, name) {\n  var removeHookRef = bindable(removeHook, null).apply(null, name ? [state, name] : [state]);\n  hook.api = {\n    remove: removeHookRef\n  };\n  hook.remove = removeHookRef;\n  ['before', 'error', 'after', 'wrap'].forEach(function (kind) {\n    var args = name ? [state, kind, name] : [state, kind];\n    hook[kind] = hook.api[kind] = bindable(addHook, null).apply(null, args);\n  });\n}\n\nfunction HookSingular() {\n  var singularHookName = 'h';\n  var singularHookState = {\n    registry: {}\n  };\n  var singularHook = register.bind(null, singularHookState, singularHookName);\n  bindApi(singularHook, singularHookState, singularHookName);\n  return singularHook;\n}\n\nfunction HookCollection() {\n  var state = {\n    registry: {}\n  };\n  var hook = register.bind(null, state);\n  bindApi(hook, state);\n  return hook;\n}\n\nvar collectionHookDeprecationMessageDisplayed = false;\n\nfunction Hook() {\n  if (!collectionHookDeprecationMessageDisplayed) {\n    console.warn('[before-after-hook]: \"Hook()\" repurposing warning, use \"Hook.Collection()\". Read more: https://git.io/upgrade-before-after-hook-to-1.4');\n    collectionHookDeprecationMessageDisplayed = true;\n  }\n\n  return HookCollection();\n}\n\nHook.Singular = HookSingular.bind();\nHook.Collection = HookCollection.bind();\nmodule.exports = Hook; // expose constructors as a named property for TypeScript\n\nmodule.exports.Hook = Hook;\nmodule.exports.Singular = Hook.Singular;\nmodule.exports.Collection = Hook.Collection;","map":{"version":3,"names":["register","require","addHook","removeHook","bind","Function","bindable","bindApi","hook","state","name","removeHookRef","apply","api","remove","forEach","kind","args","HookSingular","singularHookName","singularHookState","registry","singularHook","HookCollection","collectionHookDeprecationMessageDisplayed","Hook","console","warn","Singular","Collection","module","exports"],"sources":["/home/hosainy/documents/oden-project/repos/sas-interview-assignment/node_modules/before-after-hook/index.js"],"sourcesContent":["var register = require('./lib/register')\nvar addHook = require('./lib/add')\nvar removeHook = require('./lib/remove')\n\n// bind with array of arguments: https://stackoverflow.com/a/21792913\nvar bind = Function.bind\nvar bindable = bind.bind(bind)\n\nfunction bindApi (hook, state, name) {\n  var removeHookRef = bindable(removeHook, null).apply(null, name ? [state, name] : [state])\n  hook.api = { remove: removeHookRef }\n  hook.remove = removeHookRef\n\n  ;['before', 'error', 'after', 'wrap'].forEach(function (kind) {\n    var args = name ? [state, kind, name] : [state, kind]\n    hook[kind] = hook.api[kind] = bindable(addHook, null).apply(null, args)\n  })\n}\n\nfunction HookSingular () {\n  var singularHookName = 'h'\n  var singularHookState = {\n    registry: {}\n  }\n  var singularHook = register.bind(null, singularHookState, singularHookName)\n  bindApi(singularHook, singularHookState, singularHookName)\n  return singularHook\n}\n\nfunction HookCollection () {\n  var state = {\n    registry: {}\n  }\n\n  var hook = register.bind(null, state)\n  bindApi(hook, state)\n\n  return hook\n}\n\nvar collectionHookDeprecationMessageDisplayed = false\nfunction Hook () {\n  if (!collectionHookDeprecationMessageDisplayed) {\n    console.warn('[before-after-hook]: \"Hook()\" repurposing warning, use \"Hook.Collection()\". Read more: https://git.io/upgrade-before-after-hook-to-1.4')\n    collectionHookDeprecationMessageDisplayed = true\n  }\n  return HookCollection()\n}\n\nHook.Singular = HookSingular.bind()\nHook.Collection = HookCollection.bind()\n\nmodule.exports = Hook\n// expose constructors as a named property for TypeScript\nmodule.exports.Hook = Hook\nmodule.exports.Singular = Hook.Singular\nmodule.exports.Collection = Hook.Collection\n"],"mappings":"AAAA,IAAIA,QAAQ,GAAGC,OAAO,CAAC,gBAAD,CAAtB;;AACA,IAAIC,OAAO,GAAGD,OAAO,CAAC,WAAD,CAArB;;AACA,IAAIE,UAAU,GAAGF,OAAO,CAAC,cAAD,CAAxB,C,CAEA;;;AACA,IAAIG,IAAI,GAAGC,QAAQ,CAACD,IAApB;AACA,IAAIE,QAAQ,GAAGF,IAAI,CAACA,IAAL,CAAUA,IAAV,CAAf;;AAEA,SAASG,OAAT,CAAkBC,IAAlB,EAAwBC,KAAxB,EAA+BC,IAA/B,EAAqC;EACnC,IAAIC,aAAa,GAAGL,QAAQ,CAACH,UAAD,EAAa,IAAb,CAAR,CAA2BS,KAA3B,CAAiC,IAAjC,EAAuCF,IAAI,GAAG,CAACD,KAAD,EAAQC,IAAR,CAAH,GAAmB,CAACD,KAAD,CAA9D,CAApB;EACAD,IAAI,CAACK,GAAL,GAAW;IAAEC,MAAM,EAAEH;EAAV,CAAX;EACAH,IAAI,CAACM,MAAL,GAAcH,aAAd;EAEC,CAAC,QAAD,EAAW,OAAX,EAAoB,OAApB,EAA6B,MAA7B,EAAqCI,OAArC,CAA6C,UAAUC,IAAV,EAAgB;IAC5D,IAAIC,IAAI,GAAGP,IAAI,GAAG,CAACD,KAAD,EAAQO,IAAR,EAAcN,IAAd,CAAH,GAAyB,CAACD,KAAD,EAAQO,IAAR,CAAxC;IACAR,IAAI,CAACQ,IAAD,CAAJ,GAAaR,IAAI,CAACK,GAAL,CAASG,IAAT,IAAiBV,QAAQ,CAACJ,OAAD,EAAU,IAAV,CAAR,CAAwBU,KAAxB,CAA8B,IAA9B,EAAoCK,IAApC,CAA9B;EACD,CAHA;AAIF;;AAED,SAASC,YAAT,GAAyB;EACvB,IAAIC,gBAAgB,GAAG,GAAvB;EACA,IAAIC,iBAAiB,GAAG;IACtBC,QAAQ,EAAE;EADY,CAAxB;EAGA,IAAIC,YAAY,GAAGtB,QAAQ,CAACI,IAAT,CAAc,IAAd,EAAoBgB,iBAApB,EAAuCD,gBAAvC,CAAnB;EACAZ,OAAO,CAACe,YAAD,EAAeF,iBAAf,EAAkCD,gBAAlC,CAAP;EACA,OAAOG,YAAP;AACD;;AAED,SAASC,cAAT,GAA2B;EACzB,IAAId,KAAK,GAAG;IACVY,QAAQ,EAAE;EADA,CAAZ;EAIA,IAAIb,IAAI,GAAGR,QAAQ,CAACI,IAAT,CAAc,IAAd,EAAoBK,KAApB,CAAX;EACAF,OAAO,CAACC,IAAD,EAAOC,KAAP,CAAP;EAEA,OAAOD,IAAP;AACD;;AAED,IAAIgB,yCAAyC,GAAG,KAAhD;;AACA,SAASC,IAAT,GAAiB;EACf,IAAI,CAACD,yCAAL,EAAgD;IAC9CE,OAAO,CAACC,IAAR,CAAa,wIAAb;IACAH,yCAAyC,GAAG,IAA5C;EACD;;EACD,OAAOD,cAAc,EAArB;AACD;;AAEDE,IAAI,CAACG,QAAL,GAAgBV,YAAY,CAACd,IAAb,EAAhB;AACAqB,IAAI,CAACI,UAAL,GAAkBN,cAAc,CAACnB,IAAf,EAAlB;AAEA0B,MAAM,CAACC,OAAP,GAAiBN,IAAjB,C,CACA;;AACAK,MAAM,CAACC,OAAP,CAAeN,IAAf,GAAsBA,IAAtB;AACAK,MAAM,CAACC,OAAP,CAAeH,QAAf,GAA0BH,IAAI,CAACG,QAA/B;AACAE,MAAM,CAACC,OAAP,CAAeF,UAAf,GAA4BJ,IAAI,CAACI,UAAjC"},"metadata":{},"sourceType":"script"}